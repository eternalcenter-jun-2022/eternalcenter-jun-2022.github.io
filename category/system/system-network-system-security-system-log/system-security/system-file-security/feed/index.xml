<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>System File Security (系统文件安全) &#8211; Eternal Center</title>
	<atom:link href="https://eternalcenter-jun-2022.github.io/category/system/system-network-system-security-system-log/system-security/system-file-security/feed/" rel="self" type="application/rss+xml" />
	<link>https://eternalcenter-jun-2022.github.io/</link>
	<description></description>
	<lastBuildDate>Sat, 25 Jun 2022 13:38:45 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	
	<item>
		<title>[内容] Linux 命令安全的设置</title>
		<link>https://eternalcenter-jun-2022.github.io/command-secure/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 25 Jun 2022 13:37:57 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Privilege Security (系统权限安全)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=26174</guid>

					<description><![CDATA[确保以下目录的所属主和所属组是 root，且其它用户没有写入权限：]]></description>
										<content:encoded><![CDATA[
<p>确保以下目录的所属主和所属组是 root，且其它用户没有写入权限：</p>



<pre class="wp-block-code"><code># ls -ld /usr/local/bin /usr/local/sbin /usr/bin/ /usr/sbin
dr-xr-xr-x. 2 root root 53248 Jun 24 15:09 /usr/bin/
drwxr-xr-x. 3 root root  4096 Jun 21  2021 /usr/local/bin
drwxr-xr-x. 2 root root     6 Jun 21  2021 /usr/local/sbin
dr-xr-xr-x. 2 root root 20480 Jun 24 15:09 /usr/sbin</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] 解决 Linux 执行 crontab -e 命令时报错 “You (&#8230;&#8230;) are not allowed to use this program (crontab)”</title>
		<link>https://eternalcenter-jun-2022.github.io/debug-you-are-not-allowed-to-use-this-program-crontab/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 10 Jun 2022 10:07:51 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Performance (系统性能)]]></category>
		<category><![CDATA[System Port Security (系统端口安全)]]></category>
		<category><![CDATA[System Privilege (系统权限)]]></category>
		<category><![CDATA[System Process (系统进程)]]></category>
		<category><![CDATA[System Process & System Performance (系统进程 & 系统性能)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System User (系统用户)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23780</guid>

					<description><![CDATA[解决方法 如果在系统中没有 /etc/cron.deny 配置文件，在 /etc/cron.allow 配置文件中添加要使用 crontab -e 命令的用户 添加以下内容： （补充：这里以添加用户 zhumingyu 为例） 如果在系统中没有 /etc/cron.allow 配置文件，在 /etc/cron.allow 配置文件中删除要使用 crontab -e 命令的用户 删除以下内容： （补充：这里以删除用户 zhumingyu 为例）]]></description>
										<content:encoded><![CDATA[
<h2>解决方法</h2>



<p>如果在系统中没有 /etc/cron.deny 配置文件，在 /etc/cron.allow 配置文件中添加要使用 crontab -e 命令的用户</p>



<pre class="wp-block-code"><code># vim /etc/cron.allow</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
zhumingyu</code></pre>



<p>（补充：这里以添加用户 zhumingyu 为例）</p>



<p>如果在系统中没有 /etc/cron.allow 配置文件，在 /etc/cron.allow 配置文件中删除要使用 crontab -e 命令的用户</p>



<pre class="wp-block-code"><code># vim /etc/cron.allow</code></pre>



<p>删除以下内容：</p>



<pre class="wp-block-code"><code>......
zhumingyu
......</code></pre>



<p>（补充：这里以删除用户 zhumingyu 为例）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux 目录的重新挂载</title>
		<link>https://eternalcenter-jun-2022.github.io/remount/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Thu, 09 Jun 2022 11:16:53 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Directory (系统目录)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Privilege Security (系统权限安全)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage (系统存储)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23734</guid>

					<description><![CDATA[内容一：手动重新挂载目录 （补充：这里以带 nosuid、nodev 和 noexec 参数重新挂载 /dev/shm 目录为例） 内容二：开机自动重新挂载目录 添加以下内容： （补充：这里以带 nosuid、nodev 和 noexec 参数重新挂载 /dev/shm 目录为例）]]></description>
										<content:encoded><![CDATA[
<h3>内容一：手动重新挂载目录</h3>



<pre class="wp-block-code"><code># mount -o remount,nosuid,nodev,noexec /dev/shm</code></pre>



<p>（补充：这里以带 nosuid、nodev 和 noexec 参数重新挂载 /dev/shm 目录为例）</p>



<h3>内容二：开机自动重新挂载目录</h3>



<pre class="wp-block-code"><code># vim /etc/fstab</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
tmpfs /dev/shm tmpfs defaults,nosuid,nodev,noexec 0 0</code></pre>



<p>（补充：这里以带 nosuid、nodev 和 noexec 参数重新挂载 /dev/shm 目录为例）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux 某个所属组里有哪些用户的显示</title>
		<link>https://eternalcenter-jun-2022.github.io/group-display/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Wed, 08 Jun 2022 02:50:05 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Privilege (系统权限)]]></category>
		<category><![CDATA[System Privilege Security (系统权限安全)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage (系统存储)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<category><![CDATA[System User (系统用户)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23715</guid>

					<description><![CDATA[方法一：通过 /etc/group 配置文件显示某个附属所属组里有哪些用户 （注意：此方法并不能显示出把这些所属组当作主要所属组的用户） 方法二：通过 /etc/passwd 配置文件和 id 命令等显示主要所属组和附属所属组 （补充：可以通过肉眼比对此命令的输出结果来判断其主要所属组和附属所属组）]]></description>
										<content:encoded><![CDATA[
<h3>方法一：通过 /etc/group 配置文件显示某个附属所属组里有哪些用户</h3>



<pre class="wp-block-code"><code># cat /etc/group</code></pre>



<p>（注意：此方法并不能显示出把这些所属组当作主要所属组的用户）</p>



<h3>方法二：通过 /etc/passwd 配置文件和 id 命令等显示主要所属组和附属所属组</h3>



<pre class="wp-block-code"><code># for i in `cat /etc/passwd | egrep -v "nologin$|false$|half|sync|shutdown|halt" | awk -F: '{print $1}'`; do id $i; done | sort -k2</code></pre>



<p>（补充：可以通过肉眼比对此命令的输出结果来判断其主要所属组和附属所属组）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 软硬链接保护的开启 （防止通过软硬链接执行无权限执行的文件）</title>
		<link>https://eternalcenter-jun-2022.github.io/opening-of-soft-and-hard-link-protection/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 14 May 2022 14:41:31 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23561</guid>

					<description><![CDATA[步骤一：开启软硬链接保护 1.1 修改 /etc/sysctl.conf 文件 添加以下内容： 1.2 设置系统正在运行的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数 步骤二：显示软硬链接保护的开启状态 2.1 显示 /etc/sysctl.conf 文件里的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数 2.2 显示系统正在运行的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：开启软硬链接保护</h3>



<h4>1.1 修改 /etc/sysctl.conf 文件</h4>



<pre class="wp-block-code"><code># vim /etc/sysctl.conf</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
fs.protected_hardlinks = 1
fs.protected_symlinks = 1</code></pre>



<h4>1.2 设置系统正在运行的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数</h4>



<pre class="wp-block-code"><code># sysctl -w fs.protected_symlinks = 1
# sysctl -w fs.protected_hardlinks = 1</code></pre>



<h3>步骤二：显示软硬链接保护的开启状态</h3>



<h4>2.1 显示 /etc/sysctl.conf 文件里的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数</h4>



<pre class="wp-block-code"><code># grep "fs\.protected_hardlinks" /etc/sysctl.conf /etc/sysctl.d/*
fs.protected_hardlinks = 1</code></pre>



<pre class="wp-block-code"><code># grep "fs\.protected_symlinks" /etc/sysctl.conf /etc/sysctl.d/*
fs.protected_symlinks = 1</code></pre>



<h4>2.2 显示系统正在运行的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数</h4>



<pre class="wp-block-code"><code># sysctl fs.protected_symlinks
fs.protected_symlinks = 1
# sysctl fs.protected_hardlinks
fs.protected_hardlinks = 1</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 加密压缩 （tar 版）</title>
		<link>https://eternalcenter-jun-2022.github.io/encryption-compression-tar/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 15 Nov 2021 15:52:52 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Directory (系统目录)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage (系统存储)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=18392</guid>

					<description><![CDATA[步骤一：创建测试文件 （补充：这里以创建 test.txt 文件为例） 步骤二：加密压缩文件或目录 2.1 交互式加密压缩文件或目录 （补充：1) 这里以将 test.txt 文件加密压缩成 test1.tar.gz （压缩）包为例2) 如果要以 bzip2 的格式进行压缩，则将命令中的 -zcf 换成 -jcvf 将 test1.tar.gz 换成 test1.tar.bz23) 如果要以 xz 的格式进行压缩，则将命令中的 -zcf 换成 -Jcvf 将 test1.tar.gz 换成 test1.tar.xz） 2.2 非交互式加密压缩文件或目录 （补充：1) 这里以将 test.txt 文件加密压缩成 test1.tar.gz （压缩）包并且将密码设置为 eternalcenter 为例2) 如果要以 bzip2 的格式进行压缩，则将命令中的 -zcf 换成 -jcvf 将 test1.tar.gz 换成 test2.tar.bz23) 如果要以 xz &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/encryption-compression-tar/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] Linux 加密压缩 （tar 版）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：创建测试文件</h3>



<pre class="wp-block-code"><code># touch test.txt</code></pre>



<p>（补充：这里以创建 test.txt 文件为例）</p>



<h3>步骤二：加密压缩文件或目录</h3>



<h4>2.1 交互式加密压缩文件或目录</h4>



<pre class="wp-block-code"><code># tar -zcf - test.txt | openssl des3 -salt | dd of=test1.tar.gz
enter des-ede3-cbc encryption password:
Verifying - enter des-ede3-cbc encryption password:
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.
0+1 records in
0+1 records out
224 bytes copied, 7.04902 s, 0.0 kB/s</code></pre>



<p>（<br>补充：<br>1) 这里以将 test.txt 文件加密压缩成 test1.tar.gz （压缩）包为例<br>2) 如果要以 bzip2 的格式进行压缩，则将命令中的 -zcf 换成 -jcvf 将 test1.tar.gz 换成 test1.tar.bz2<br>3) 如果要以 xz 的格式进行压缩，则将命令中的 -zcf 换成 -Jcvf 将 test1.tar.gz 换成 test1.tar.xz<br>）</p>



<h4>2.2 非交互式加密压缩文件或目录</h4>



<pre class="wp-block-code"><code># tar -zcf - test.txt | openssl des3 -salt -f eternalcenter | dd of=test2.tar.gz
des3: Unrecognized flag f
des3: Use -help for summary.
0+0 records in
0+0 records out
0 bytes copied, 0.00376576 s, 0.0 kB/s</code></pre>



<p>（<br>补充：<br>1) 这里以将 test.txt 文件加密压缩成 test1.tar.gz （压缩）包并且将密码设置为 eternalcenter 为例<br>2) 如果要以 bzip2 的格式进行压缩，则将命令中的 -zcf 换成 -jcvf 将 test1.tar.gz 换成 test2.tar.bz2<br>3) 如果要以 xz 的格式进行压缩，则将命令中的 -zcf 换成 -Jcvf 将 test1.tar.gz 换成 test2.tar.xz<br>）</p>



<h3>步骤三：解压加密文件或目录</h3>



<h4>3.1 交互式解压加密文件或目录</h4>



<h5>3.1.1 删除原测试目录和里面的文件</h5>



<pre class="wp-block-code"><code># rm -rf test.txt</code></pre>



<p>（补充：这里以删除 test.txt 文件为例）</p>



<h5>3.1.2 交互式解压加密文件或目录</h5>



<pre class="wp-block-code"><code># dd if=test2.tar.gz | openssl des3 -d | tar zxf -
0+1 records in
0+1 records out
224 bytes copied, 0.000589721 s, 380 kB/s
enter des-ede3-cbc decryption password:
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.</code></pre>



<p>（<br>补充：<br>1) 这里以解压 test2.tar.gz （压缩）包为例<br>2) 如果是 bzip2 格式的（压缩）包，则将命令中的 -zxf 换成 -jcvf 将 test1.tar.gz 换成 test1.tar.bz2<br>3) 如果是 xz 格式的（压缩）包，则将命令中的 -zxf 换成 -Jcvf 将 test1.tar.gz 换成 test1.tar.xz<br>）</p>



<h4>3.2 非交互式解压加密文件或目录</h4>



<h5>3.2.1 删除原测试目录和里面的文件</h5>



<pre class="wp-block-code"><code># rm -rf test.txt</code></pre>



<p>（补充：这里以删除 test.txt 文件为例）</p>



<h5>3.2.2 非交互式解压加密文件或目录</h5>



<pre class="wp-block-code"><code># dd if=test1.tar.gz | openssl des3 -d -k eternalcenter | tar zxf -
0+1 records in
0+1 records out
224 bytes copied, 0.000574539 s, 390 kB/s
*** WARNING : deprecated key derivation used.
Using -iter or -pbkdf2 would be better.</code></pre>



<p>（<br>补充：<br>1) 这里以解压 test1.tar.gz （压缩）包并且解压密码为 eternalcenter 为例<br>2) 如果是 bzip2 格式的（压缩）包，则将命令中的 -zxf 换成 -jcvf 将 test1.tar.gz 换成 test1.tar.bz2<br>3) 如果是 xz 格式的（压缩）包，则将命令中的 -zxf 换成 -Jcvf 将 test1.tar.gz 换成 test1.tar.xz<br>）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 加密压缩 （zip 版）</title>
		<link>https://eternalcenter-jun-2022.github.io/encryption-compression-zip/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 15 Nov 2021 15:48:09 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Directory (系统目录)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage (系统存储)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=18388</guid>

					<description><![CDATA[步骤一：创建测试目录和测试文件 （补充：这里以创建 test 目录和里面的 test.txt 文件为例） 步骤二：加密压缩文件或目录 2.1 交互式加密压缩文件或目录 （补充：这里以将 test 目录和里面的 test.txt 文件加密压缩成 test1.zip （压缩）包为例） 2.2 非交互式加密解压文件或目录 （补充：这里以将 test 目录和里面的 test.txt 文件加密压缩成 test2.zip （压缩）包并且将密码设置为 eternalcenter 为例） 步骤三：解压加密文件或目录 3.1 交互式解压加密文件或目录 3.1.1 删除原测试目录和里面的文件 （补充：这里以删除 test 目录和里面的文件为例） 3.1.2 交互式解压加密文件或目录 （补充：这里以解压 test2.zip （压缩）包为例） 3.2 非交互式解压加密文件或目录 3.2.1 删除原测试目录和里面的文件 （补充：这里以删除 test 目录和里面的文件为例） 3.2.2 非交互式解压加密文件 （补充：这里以解压 test2.zip （压缩）包并且解压密码为 eternalcenter 为例）]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：创建测试目录和测试文件</h3>



<pre class="wp-block-code"><code># mkdir test
# touch test/test.txt</code></pre>



<p>（补充：这里以创建 test 目录和里面的 test.txt 文件为例）</p>



<h3>步骤二：加密压缩文件或目录</h3>



<h4>2.1 交互式加密压缩文件或目录</h4>



<pre class="wp-block-code"><code># zip -re test1.zip test
Enter password: 
Verify password: 
  adding: test/ (stored 0%)
  adding: test/test.txt (stored 0%)</code></pre>



<p>（补充：这里以将 test 目录和里面的 test.txt 文件加密压缩成 test1.zip （压缩）包为例）</p>



<h4>2.2 非交互式加密解压文件或目录</h4>



<pre class="wp-block-code"><code># zip -rP eternalcenter test2.zip test
  adding: test/ (stored 0%)
  adding: test/test.txt (stored 0%)</code></pre>



<p>（补充：这里以将 test 目录和里面的 test.txt 文件加密压缩成 test2.zip （压缩）包并且将密码设置为 eternalcenter 为例）</p>



<h3>步骤三：解压加密文件或目录</h3>



<h4>3.1 交互式解压加密文件或目录</h4>



<h5>3.1.1 删除原测试目录和里面的文件</h5>



<pre class="wp-block-code"><code># rm -rf test</code></pre>



<p>（补充：这里以删除 test 目录和里面的文件为例）</p>



<h5>3.1.2 交互式解压加密文件或目录</h5>



<pre class="wp-block-code"><code># unzip test2.zip
Archive:  test2.zip
   creating: test/
&#91;test2.zip] test/test.txt password: 
 extracting: test/test.txt</code></pre>



<p>（补充：这里以解压 test2.zip （压缩）包为例）</p>



<h4>3.2 非交互式解压加密文件或目录</h4>



<h5>3.2.1 删除原测试目录和里面的文件</h5>



<pre class="wp-block-code"><code># rm -rf test</code></pre>



<p>（补充：这里以删除 test 目录和里面的文件为例）</p>



<h5>3.2.2 非交互式解压加密文件</h5>



<pre class="wp-block-code"><code># unzip -P eternalcenter test1.zip 
Archive:  test1.zip
   creating: test/
 extracting: test/test.txt  </code></pre>



<p>（补充：这里以解压 test2.zip （压缩）包并且解压密码为 eternalcenter 为例）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux rm 命令的监控</title>
		<link>https://eternalcenter-jun-2022.github.io/rm-monitor/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sun, 07 Nov 2021 13:29:10 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=18208</guid>

					<description><![CDATA[步骤一：将原来的 rm 命令进行备份 步骤二：创建一个记录 rm 命令使用的脚本 步骤三：给记录 rm 命令使用的脚本执行权限 步骤四：下次使用 rm 命令后就可以监控 /var/log/rm_command.log 日志了 （步骤略）]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：将原来的 rm 命令进行备份</h3>



<pre class="wp-block-code"><code># cp /usr/bin/rm  /usr/bin/rm.original</code></pre>



<h3>步骤二：创建一个记录 rm 命令使用的脚本</h3>



<pre class="wp-block-code"><code># cat /usr/bin/rm
#!/bin/bash
log=/var/log/rm_command.log
echo "The $$ is calling rm command" &gt;&gt; $log
echo "The full command is $*" &gt;&gt; $log
echo
echo "now use this command to get more information: /bin/ps axwwo user,pid,ppid,%cpu,%mem,vsz,rss,stat,time,cmd" &gt;&gt;$log
/bin/ps axwwo user,pid,ppid,%cpu,%mem,vsz,rss,stat,time,cmd &gt;&gt;$log
/usr/bin/rm.original $*
echo "============================================================" &gt;&gt;$log</code></pre>



<h3>步骤三：给记录 rm 命令使用的脚本执行权限</h3>



<pre class="wp-block-code"><code># chmod 755 /usr/bin/rm.original</code></pre>



<h3>步骤四：下次使用 rm 命令后就可以监控 /var/log/rm_command.log 日志了</h3>



<p>（步骤略）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] SELinux  的启用 （openSUSE &#038; SLE  版） （不建议）</title>
		<link>https://eternalcenter-jun-2022.github.io/selinux-opensuse-sle/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Tue, 01 Jun 2021 08:50:14 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[SELinux]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Log (系统日志)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Port Security (系统端口安全)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Security Log (系统安全日志)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=14516</guid>

					<description><![CDATA[软件准备： 在 SELinuxProject 的官网上下载 SELinux 策略 UseRefpolicy： https://github.com/SELinuxProject/refpolicy/wiki/UseRefpolicy 注意： 1) 如果使用此文的方法将 openSUSE &#38; SLE 的 SELinux 设置为 Enforcing 则系统将无法设置 IP 地址2) 如果使用此文的方法开启了 SELinux 并且将所有的布尔（boolean）值开启，则系统将无法关机，开启所有布尔值的方法：# for i in semanage boolean -l &#124; awk '{print $1}'; do echo $i;setsebool -P $i 1; done 正文： 步骤一：安装 SELinux 组件 步骤二：安装 SELinux 策略 2.1 解压包含 SELinux 策略的压缩包 （补充：这里以解压 refpolicy-2.20210203.tar.bz2 压缩包为例） &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/selinux-opensuse-sle/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] SELinux  的启用 （openSUSE &#038; SLE  版） （不建议）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h1 id="软件准备">软件准备：</h1>



<p>在 SELinuxProject 的官网上下载 SELinux 策略 UseRefpolicy：</p>



<p class="has-text-align-center"><a href="https://github.com/SELinuxProject/refpolicy/wiki/UseRefpolicy" target="_blank" rel="noreferrer noopener">https://github.com/SELinuxProject/refpolicy/wiki/UseRefpolicy</a></p>



<h1 id="注意">注意：</h1>



<p>1) 如果使用此文的方法将 openSUSE &amp; SLE 的 SELinux 设置为 Enforcing 则系统将无法设置 IP 地址<br>2) 如果使用此文的方法开启了 SELinux 并且将所有的布尔（boolean）值开启，则系统将无法关机，开启所有布尔值的方法：# for i in <code>semanage boolean -l | awk '{print $1}'</code>; do echo $i;setsebool -P $i 1; done</p>



<h1 id="正文">正文：</h1>



<h3 id="步骤一-安装-selinux-组件">步骤一：安装 SELinux 组件</h3>



<pre class="wp-block-code"><code># zypper in libselinux1 libsemanage1 libsepol-devel libsepol1 libselinux-devel mcstrans libselinux1-32bit policycoreutils checkpolicy libsemanage-devel setools-tcl setools-libs setools-java setools-devel setools-console selinux-tools python3-policycoreutils python3-selinux python3-semanage python3-setools restorecond</code></pre>



<h3 id="步骤二-安装-selinux-策略-2-1-解压包含-selinux-策略的压缩包">步骤二：安装 SELinux 策略</h3>



<h4 id="步骤二-安装-selinux-策略-2-1-解压包含-selinux-策略的压缩包">2.1 解压包含 SELinux 策略的压缩包</h4>



<pre class="wp-block-code"><code># tar -xvf refpolicy-2.20210203.tar.bz2</code></pre>



<p>（补充：这里以解压 refpolicy-2.20210203.tar.bz2 压缩包为例）</p>



<h4 id="2-2-将-selinux-策略移动到-selinux-配置文件的位置">2.2 将 SELinux 策略移动到 SELinux 配置文件的位置</h4>



<pre class="wp-block-code"><code># mv refpolicy /etc/selinux/</code></pre>



<h4 id="2-3-进入到和-selinux-策略相同目录下">2.3 进入到和 SELinux 策略相同目录下</h4>



<pre class="wp-block-code"><code># cd /etc/selinux/refpolicy/</code></pre>



<h4 id="2-4-显示-selinux-策略的安装手册">2.4 显示 SELinux 策略的安装手册</h4>



<pre class="wp-block-code"><code># cat INSTALL</code></pre>



<h4 id="2-5-创建-selinux-策略的配置文件">2.5 创建 SELinux 策略的配置文件</h4>



<pre class="wp-block-code"><code># make conf</code></pre>



<h4 id="2-6-创建-selinux-策略">2.6 创建 SELinux 策略</h4>



<pre class="wp-block-code"><code># make policy</code></pre>



<h4 id="2-7-编译-selinux-策略">2.7 编译 SELinux 策略</h4>



<pre class="wp-block-code"><code># make install</code></pre>



<h4 id="2-8-安装-selinux-策略">2.8 安装 SELinux 策略</h4>



<pre class="wp-block-code"><code># make load</code></pre>



<h3 id="步骤三-配置-selinux-配置文件-3-1-在-selinux-配置文件中将-selinux-设置为-permissive-状态">步骤三：配置 SELinux 配置文件</h3>



<h4 id="步骤三-配置-selinux-配置文件-3-1-在-selinux-配置文件中将-selinux-设置为-permissive-状态">3.1 在 SELinux 配置文件中将 SELinux 设置为 Permissive 状态</h4>



<pre class="wp-block-code"><code># vim /etc/selinux/config</code></pre>



<p>创建以下内容：</p>



<pre class="wp-block-code"><code># This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=permissive
# SELINUXTYPE= can take one of three values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected.
#     mls - Multi Level Security protection.
SELINUXTYPE=refpolicy</code></pre>



<h4 id="3-2-在系统内核中禁止使用-apparmor-使用-selinux-并且将-selinux-状态设置为-permissive-3-2-1-设置-grub-文件">3.2 在系统内核中禁止使用 AppArmor 使用 SELinux 并且将 SELinux 状态设置为 Permissive</h4>



<h5 id="3-2-在系统内核中禁止使用-apparmor-使用-selinux-并且将-selinux-状态设置为-permissive-3-2-1-设置-grub-文件">3.2.1 设置 /etc/default/grub 配置文件</h5>



<pre class="wp-block-code"><code># vim /etc/default/grub</code></pre>



<p>在这一行里：</p>



<pre class="wp-block-code"><code>GRUB_CMDLINE_LINUX_DEFAULT="......"</code></pre>



<pre class="wp-block-code"><code>添加以下内容：</code></pre>



<pre class="wp-block-code"><code>GRUB_CMDLINE_LINUX_DEFAULT="...... security=selinux selinux=1 enforcing=0"</code></pre>



<h5 id="3-2-2-让刚刚设置的-grub-文件生效">3.2.2 让刚刚设置的 /etc/default/grub 配置文件生效</h5>



<pre class="wp-block-code"><code># grub2-mkconfig -o /boot/grub2/grub.cfg</code></pre>



<h4 id="3-3-刷新系统内所有文件的标签">3.3 刷新系统内所有文件的标签</h4>



<pre class="wp-block-code"><code># restorecon -Rp /</code></pre>



<h3 id="步骤四-重启系统让-selinux-生效">步骤四：重启系统让 SELinux 生效</h3>



<pre class="wp-block-code"><code># reboot</code></pre>



<h1 id="参考文献">参考文献：</h1>



<p class="has-text-align-center">https://documentation.suse.com/sles/15-SP2/html/SLES-all/cha-selinux.html</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux SELinux 状态的设置</title>
		<link>https://eternalcenter-jun-2022.github.io/selinux-state/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 31 May 2021 13:37:41 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[SELinux]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Log (系统日志)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Port Security (系统端口安全)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Security Log (系统安全日志)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=14456</guid>

					<description><![CDATA[内容一：SELinux 的状态 1) Disabled：完全关闭 SELinux2) Permissive：即使违反了策略也依旧可以执行，但是违反策略的记录会被记录在日志中3) Enforcing：如果违反了策略就不能之行 内容二：永久切换 SELinux 状态 2.1 将 SELinux 永久切换至 Disabled 状态 2.1.1 修改 SELinux 配置文件 将以下内容： 修改为： 2.1.2 重启系统 2.1.3 显示 SELinux 状态 2.2 将 SELinux 永久切换至 Permissive 状态 2.2.1 修改 SELinux 配置文件 将以下内容： 修改为： 2.2.2 重启系统 2.2.3 显示 SELinux 状态 2.3 将 SELinux 永久切换至 Enforcing 状态 2.3.1 修改 SELinux &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/selinux-state/" class="more-link">Continue reading<span class="screen-reader-text"> "[内容] Linux SELinux 状态的设置"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3 id="内容一-selinux-的状态">内容一：SELinux 的状态</h3>



<p>1) Disabled：完全关闭 SELinux<br>2) Permissive：即使违反了策略也依旧可以执行，但是违反策略的记录会被记录在日志中<br>3) Enforcing：如果违反了策略就不能之行</p>



<h3 id="内容二-永久切换-selinux-状态-2-1-将-selinux-永久切换至-disabled-状态-2-1-1-修改-selinux-配置文件">内容二：永久切换 SELinux 状态</h3>



<h4 id="内容二-永久切换-selinux-状态-2-1-将-selinux-永久切换至-disabled-状态-2-1-1-修改-selinux-配置文件">2.1 将 SELinux 永久切换至 Disabled 状态</h4>



<h5 id="内容二-永久切换-selinux-状态-2-1-将-selinux-永久切换至-disabled-状态-2-1-1-修改-selinux-配置文件">2.1.1 修改 SELinux 配置文件</h5>



<pre class="wp-block-code"><code># vim /etc/selinux/config</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
SELINUX=......
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
SELINUX=disabled
......</code></pre>



<h5 id="2-1-2-重启系统">2.1.2 重启系统</h5>



<pre class="wp-block-code"><code># reboot</code></pre>



<h5 id="2-1-3-显示-selinux-状态">2.1.3 显示 SELinux 状态</h5>



<pre class="wp-block-code"><code># getenforce 
Disabled</code></pre>



<h4 id="2-2-将-selinux-永久切换至-permissive-状态-2-2-1-修改-selinux-配置文件">2.2 将 SELinux 永久切换至 Permissive 状态</h4>



<h5 id="2-2-将-selinux-永久切换至-permissive-状态-2-2-1-修改-selinux-配置文件">2.2.1 修改 SELinux 配置文件</h5>



<pre class="wp-block-code"><code># vim /etc/selinux/config</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
SELINUX=......
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
SELINUX=permissive
......</code></pre>



<h5 id="2-2-2-重启系统">2.2.2 重启系统</h5>



<pre class="wp-block-code"><code># reboot</code></pre>



<h5 id="2-2-3-显示-selinux-状态">2.2.3 显示 SELinux 状态</h5>



<pre class="wp-block-code"><code># getenforce 
Permissive</code></pre>



<h4 id="2-3-将-selinux-永久切换至-enforcing-状态-2-3-1-修改-selinux-配置文件">2.3 将 SELinux 永久切换至 Enforcing 状态</h4>



<h5 id="2-3-将-selinux-永久切换至-enforcing-状态-2-3-1-修改-selinux-配置文件">2.3.1 修改 SELinux 配置文件</h5>



<pre class="wp-block-code"><code># vim /etc/selinux/config</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
SELINUX=......
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
SELINUX=enforcing
......</code></pre>



<h5 id="2-3-2-重启系统">2.3.2 重启系统</h5>



<pre class="wp-block-code"><code># reboot</code></pre>



<h5 id="2-3-3-显示-selinux-状态">2.3.3 显示 SELinux 状态</h5>



<pre class="wp-block-code"><code># getenforce 
Enforcing</code></pre>



<h3 id="内容三-临时切换-selinux-状态-3-1-临时切换到-permissive-状态-3-1-1-临时切换到-permissive-状态">内容三：临时切换 SELinux 状态</h3>



<h4 id="内容三-临时切换-selinux-状态-3-1-临时切换到-permissive-状态-3-1-1-临时切换到-permissive-状态">3.1 临时切换到 Permissive 状态</h4>



<h5 id="内容三-临时切换-selinux-状态-3-1-临时切换到-permissive-状态-3-1-1-临时切换到-permissive-状态">3.1.1 临时切换到 Permissive 状态</h5>



<pre class="wp-block-code"><code># setenfoce 0</code></pre>



<p>（<br>注意：<br>1) 系统重启后失效<br>2) 只能从 Enforcing 状态切换到 Permissive 状态<br>）</p>



<h5 id="3-1-2-显示-selinux-状态">3.1.2 显示 SELinux 状态</h5>



<pre class="wp-block-code"><code># getenforce 
Permissive</code></pre>



<h4 id="3-2-临时切换到-enforcing-状态-3-2-1-临时切换到-enforcing-状态">3.2 临时切换到 Enforcing 状态</h4>



<h5 id="3-2-临时切换到-enforcing-状态-3-2-1-临时切换到-enforcing-状态">3.2.1 临时切换到 Enforcing 状态</h5>



<pre class="wp-block-code"><code># setenfoce 1</code></pre>



<p>（<br>注意：<br>1) 系统重启后失效<br>2) 只能从 Permissive 状态切换到 Enforcing 状态<br>）</p>



<h5 id="3-2-2-显示-selinux-状态">3.2.2 显示 SELinux 状态</h5>



<pre class="wp-block-code"><code># getenforce 
Enforcing</code></pre>



<p></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] AIDE 的使用 （高级入侵检测环境：Adevanced Intrusion Detection Environment） （openSUSE &#038; SLE 版）</title>
		<link>https://eternalcenter-jun-2022.github.io/aide-opensuse-sle/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 11 Jan 2021 07:57:13 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=13210</guid>

					<description><![CDATA[步骤一：安装 AIDE 步骤二：生成 AIDE 的配置文件 2.1 生成 AIDE 配置文件的模板 2.2 将 AIDE 配置文件的模板转换成配置文件 步骤三：使用 AIDE （补充：AIDE 要检查哪些文件不检查哪些文件可以在 /etc/aide.conf 中设置）]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：安装 AIDE</h3>



<pre class="wp-block-code"><code># zypper -n install aide</code></pre>



<h3>步骤二：生成 AIDE 的配置文件</h3>



<h4>2.1 生成 AIDE 配置文件的模板</h4>



<pre class="wp-block-code"><code># /usr/bin/aide --init
AIDE initialized database at /var/lib/aide/aide.db.new

Number of entries:      62624</code></pre>



<h4>2.2 将 AIDE 配置文件的模板转换成配置文件</h4>



<pre class="wp-block-code"><code># mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db</code></pre>



<h3>步骤三：使用 AIDE</h3>



<pre class="wp-block-code"><code># /usr/bin/aide --check
AIDE found differences between database and filesystem!!

Summary:
  Total number of entries:      62623
  Added entries:                0
  Removed entries:              1
  Changed entries:              0</code></pre>



<p>（补充：AIDE 要检查哪些文件不检查哪些文件可以在 /etc/aide.conf 中设置）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux acl 权限</title>
		<link>https://eternalcenter-jun-2022.github.io/acl/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 27 Jul 2020 14:13:44 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Directory (系统目录)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Privilege (系统权限)]]></category>
		<category><![CDATA[System Privilege Security (系统权限安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=10342</guid>

					<description><![CDATA[案例一：给某一个文件或目录添加 acl 1.1 给某一个文件或目录添加一个用户的 acl （补充：这里以在 /var 目录上给 zhumingyu 用户设置读和执行的 acl 权限为例） 1.2 给某一个文件或目录添加一个组的 acl （补充：这里以在 /var 目录上给 zhumingyu 组设置读和执行的 acl 权限为例） 1.3 递归给某一个目录和目录里的所有内容添加一个 acl （补充：这里以在 /var 目录上递归给 zhumingyu 组设置读和执行的 acl 权限为例） 案例二：删除某一个文件或目录的 acl 2.1 删除某一个文件或目录一个用户的 acl （补充：这里以在 /var 目录上删除 zhumingyu 用户的 acl 权限为例） 2.2 删除某一个文件或目录一个组的 acl （补充：这里以在 /var 目录上删除 zhumingyu 组的 acl 权限为例） 2.3 &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/acl/" class="more-link">Continue reading<span class="screen-reader-text"> "[内容] Linux acl 权限"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3 id="案例一-给某一个文件或目录添加-acl1-1-给某一个文件或目录添加一个用户的-acl">案例一：给某一个文件或目录添加 acl</h3>



<h4 id="案例一-给某一个文件或目录添加-acl1-1-给某一个文件或目录添加一个用户的-acl">1.1 给某一个文件或目录添加一个用户的 acl</h4>



<pre class="wp-block-code"><code># setfacl -m u:zhumingyu:r-x /var</code></pre>



<p>（补充：这里以在 /var 目录上给 zhumingyu 用户设置读和执行的 acl 权限为例）</p>



<h4 id="1-2-给某一个文件或目录添加一个组的-acl">1.2 给某一个文件或目录添加一个组的 acl</h4>



<pre class="wp-block-code"><code># setfacl -m g:zhumingyu:r-x /var</code></pre>



<p>（补充：这里以在 /var 目录上给 zhumingyu 组设置读和执行的 acl 权限为例）</p>



<h4 id="1-3-递归给某一个目录和目录里的所有内容添加一个-acl">1.3 递归给某一个目录和目录里的所有内容添加一个 acl</h4>



<pre class="wp-block-code"><code># setfacl -Rm u:zhumingyu:r-x /var</code></pre>



<p>（补充：这里以在 /var 目录上递归给 zhumingyu 组设置读和执行的 acl 权限为例）</p>



<h3 id="案例二-删除某一个文件或目录的-acl2-1-删除某一个文件或目录一个用户的-acl">案例二：删除某一个文件或目录的 acl</h3>



<h4 id="案例二-删除某一个文件或目录的-acl2-1-删除某一个文件或目录一个用户的-acl">2.1 删除某一个文件或目录一个用户的 acl</h4>



<pre class="wp-block-code"><code># setfacl -x u:zhumingyu /var</code></pre>



<p>（补充：这里以在 /var 目录上删除 zhumingyu 用户的 acl 权限为例）</p>



<h4 id="2-2-删除某一个文件或目录一个组的-acl">2.2 删除某一个文件或目录一个组的 acl</h4>



<pre class="wp-block-code"><code># setfacl -x g:zhumingyu /var</code></pre>



<p>（补充：这里以在 /var 目录上删除 zhumingyu 组的 acl 权限为例）</p>



<h4 id="2-3-删除某一个文件或目录的所有-acl">2.3 删除某一个文件或目录的所有 acl</h4>



<pre class="wp-block-code"><code># setfacl -b /var</code></pre>



<p>（补充：这里以在 /var 目录上删除所有 acl 权限为例）</p>



<h4 id="2-4-递归删除某一个文件或目录的-acl">2.4 递归删除某一个文件或目录的 acl</h4>



<pre class="wp-block-code"><code># setfacl -Rx u:zhumingyu:r-x /var</code></pre>



<p>（补充：这里以在 /var 目录上递归删除 zhumingyu 用户的 acl 权限为例）</p>



<h4 id="2-5-递归删除某一个文件或目录的所有-acl">2.5 递归删除某一个文件或目录的所有 acl</h4>



<pre class="wp-block-code"><code># setfacl -Rb /var</code></pre>



<p>（补充：这里以在 /var 目录上递归删除所有 acl 权限为例）</p>



<h3 id="案例三-查看某一个文件或目录的-acl">案例三：显示某一个文件或目录的 acl</h3>



<pre class="wp-block-code"><code># getfacl /var</code></pre>



<p>（补充：这里以显示 /var 目录的 acl 权限为例）</p>



<h3 id="案例四-备份和还原某一个文件或目录的-acl4-1-备份某一个文件或目录的-acl">案例四：备份和还原某一个文件或目录的 acl</h3>



<h4 id="案例四-备份和还原某一个文件或目录的-acl4-1-备份某一个文件或目录的-acl">4.1 备份某一个文件或目录的 acl</h4>



<pre class="wp-block-code"><code># getfacl -R /var &gt; /acl.backup</code></pre>



<p>（补充：这里以备份 /var 目录的 acl 权限为例）</p>



<h4 id="4-2-还原某一给文件或目录的-acl">4.2 还原某一给文件或目录的 acl</h4>



<pre class="wp-block-code"><code># setfacl --restore /acl.backup</code></pre>



<p>（补充：这里以还原 /var 目录的 acl 权限为例）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux SELinux 标签的设置</title>
		<link>https://eternalcenter-jun-2022.github.io/selinux-label/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 25 Jul 2020 07:11:03 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[SELinux]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Log (系统日志)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Port Security (系统端口安全)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Security Log (系统安全日志)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=10257</guid>

					<description><![CDATA[内容一：开启 SELinux 标签 1.1 修改 SELinux 配置文件 将以下内容： 修改为： 或者： 1.2 重启系统 内容二：SELinux 的常见特性 2.1 SELinux 特性一：创建的文件或目录会自动继承其父目录的 SELinux 标签 2.1.1 在 /var/www/html/ 目录下新创建 index.html 文件 （补充：这里以在 /var/www/html/ 目录下生成 index.html 文件为例） 2.1.2 显示 /var/www/html/ 目录的 SELinux 标签 2.1.3 显示新生成的 /var/www/html/index.html 标签 （补充：从内容 1.1.2 和内容 1.1.3 命令的结果可以看出新生成的文件或其父目录的 SELinux 标签一致） 2.2 SELinux 特性二：移动文件或目录和保留属性复制文件或目录不会改变其 SELinux 标签，普通复制会改变 SELinux 标签 2.2.1 &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/selinux-label/" class="more-link">Continue reading<span class="screen-reader-text"> "[内容] Linux SELinux 标签的设置"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3 id="内容一-开启-selinux-标签1-1-修改-selinux-配置文件">内容一：开启 SELinux 标签</h3>



<h4 id="内容一-开启-selinux-标签1-1-修改-selinux-配置文件">1.1 修改 SELinux 配置文件</h4>



<pre class="wp-block-code"><code># vim /etc/selinux/config</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
SELINUX=disabled
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
SELINUX=enforcing
......</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>......
SELINUX=perssive
......</code></pre>



<h4 id="1-2-重启系统">1.2 重启系统</h4>



<pre class="wp-block-code"><code># reboot</code></pre>



<h3 id="内容二-selinux-的常见特性2-1-selinux-特性一-创建的文件或目录会自动继承其父目录的-selinux-标签2-1-1-在-var-www-html-目录下新创建-index-html-文件">内容二：SELinux 的常见特性</h3>



<h4 id="内容二-selinux-的常见特性2-1-selinux-特性一-创建的文件或目录会自动继承其父目录的-selinux-标签2-1-1-在-var-www-html-目录下新创建-index-html-文件">2.1 SELinux 特性一：创建的文件或目录会自动继承其父目录的 SELinux 标签</h4>



<h5 id="内容二-selinux-的常见特性2-1-selinux-特性一-创建的文件或目录会自动继承其父目录的-selinux-标签2-1-1-在-var-www-html-目录下新创建-index-html-文件">2.1.1 在 /var/www/html/ 目录下新创建 index.html 文件</h5>



<pre class="wp-block-code"><code># echo website &gt; /var/www/html/index.html</code></pre>



<p>（补充：这里以在 /var/www/html/ 目录下生成 index.html 文件为例）</p>



<h5 id="2-1-2-显示-var-www-html-目录的-selinux-标签">2.1.2 显示 /var/www/html/ 目录的 SELinux 标签</h5>



<pre class="wp-block-code"><code># ls -dZ /var/www/html/
unconfined_u:object_r:httpd_sys_content_t:s0 index.html</code></pre>



<h5 id="2-1-3-显示新生成的-var-www-html-index-html-标签">2.1.3 显示新生成的 /var/www/html/index.html 标签</h5>



<pre class="wp-block-code"><code># ls -Z /var/www/html/index.html/index.html 
unconfined_u:object_r:httpd_sys_content_t:s0 index.html</code></pre>



<p>（补充：从内容 1.1.2 和内容 1.1.3 命令的结果可以看出新生成的文件或其父目录的 SELinux 标签一致）</p>



<h4 id="2-2-selinux-特性二-移动文件或目录和保留属性复制文件或目录不会改变其-selinux-标签-普通复制会改变-selinux-标签2-2-1-在-tmp-目录下新创建-file1-file2-file3-文件">2.2 SELinux 特性二：移动文件或目录和保留属性复制文件或目录不会改变其 SELinux 标签，普通复制会改变 SELinux 标签</h4>



<h5 id="2-2-selinux-特性二-移动文件或目录和保留属性复制文件或目录不会改变其-selinux-标签-普通复制会改变-selinux-标签2-2-1-在-tmp-目录下新创建-file1-file2-file3-文件">2.2.1 在 /tmp/ 目录下新创建 file1，file2，file3 文件</h5>



<pre class="wp-block-code"><code># touch /tmp/file{1,2,3}</code></pre>



<h5 id="2-2-2-显示-ls-zd-tmp-目录的-selinux-标签">2.2.2 显示 /tmp 目录的 selinux 标签</h5>



<pre class="wp-block-code"><code># ls -Zd /tmp
unconfined_u:object_r:user_tmp_t:s0 /tmp/</code></pre>



<h5 id="2-2-3-显示新创建文件的标签">2.2.3 显示新创建文件的标签</h5>



<pre class="wp-block-code"><code># ls -Z /tmp/file*
unconfined_u:object_r:user_tmp_t:s0 /tmp/file1  unconfined_u:object_r:user_tmp_t:s0 /tmp/file2
unconfined_u:object_r:user_tmp_t:s0 /tmp/file3</code></pre>



<h5 id="2-2-4-将-tmp-file1-复制到-var-www-html">2.2.4 将 /tmp/file1 复制到 /var/www/html/</h5>



<pre class="wp-block-code"><code># cp /tmp/file1 /var/www/html/</code></pre>



<h5 id="2-2-5-将-tmp-file2-移动到-var-www-html">2.2.5 将 /tmp/file2 移动到 /var/www/html/</h5>



<pre class="wp-block-code"><code># mv /tmp/file2 /var/www/html/</code></pre>



<h5 id="2-2-6-将-tmp-file2-复制到-var-www-html-并使用-a-选项保留文件属性">2.2.6 将 /tmp/file2 复制到 /var/www/html/，并使用 -a 选项保留文件属性</h5>



<pre class="wp-block-code"><code># cp -a /tmp/file3 /var/www/html/</code></pre>



<h5 id="2-2-7-显示这些文件的-selinux-标签">2.2.7 显示这些文件的 SELinux 标签</h5>



<pre class="wp-block-code"><code># ls -Z /var/www/html/file*
unconfined_u:object_r:httpd_sys_content_t:s0 file1           unconfined_u:object_r:user_tmp_t:s0 file3
unconfined_u:object_r:user_tmp_t:s0 file2</code></pre>



<p>（补充：从内容 2.2.3 和内容 2.2.7 命令的结果可以看出只有普通复制会改变 SELinux 标签 ）</p>



<h3 id="内容三-显示某个文件-目录或进程-selinux-标签3-1-显示某个文件-selinux-标签">内容三：显示某个文件、目录或进程 SELinux 标签</h3>



<h4 id="内容三-显示某个文件-目录或进程-selinux-标签3-1-显示某个文件-selinux-标签">3.1 显示某个文件 SELinux 标签</h4>



<pre class="wp-block-code"><code># ls -Z &lt;file&gt;</code></pre>



<h4 id="3-2-显示某个目录-selinux-标签">3.2 显示某个目录 SELinux 标签</h4>



<pre class="wp-block-code"><code># ls -Zd &lt;directory&gt;</code></pre>



<h4 id="3-3-显示某个进程-selinux-标签">3.3 显示某个进程 SELinux 标签</h4>



<pre class="wp-block-code"><code># ps -auxZ | grep &lt;process&gt;</code></pre>



<h3 id="内容四-显示所有-selinux-标签4-1-显示所有文件和目录的-selinux-标签">内容四：显示所有 SELinux 标签</h3>



<h4 id="内容四-显示所有-selinux-标签4-1-显示所有文件和目录的-selinux-标签">4.1 显示所有文件和目录的 SELinux 标签</h4>



<pre class="wp-block-code"><code># semanage fcontext -l</code></pre>



<p>（注意：需要单独安装 policycoreutils-python-utils 后才能使用 semanage 命令）</p>



<h4 id="4-2-显示所有端口的-selinux-标签">4.2 显示所有端口的 SELinux 标签</h4>



<pre class="wp-block-code"><code># semanage port -l</code></pre>



<p>（注意：需要单独安装 policycoreutils-python-utils 后才能使用 semanage 命令）</p>



<h4 id="4-3-显示所有进程的-selinux-标签">4.3 显示所有进程的 SELinux 标签</h4>



<pre class="wp-block-code"><code># ps -auxZ</code></pre>



<h3 id="内容五-设置-selinux-标签5-1-设置文件和目录-selinux-标签5-1-1-使用-semanage-fcontext-命令和-restorecon-命令设置文件和目录的-selinux-标签5-1-1-1-semanage-fcontext-命令的常用选项">内容五：设置 SELinux 标签</h3>



<h4 id="内容五-设置-selinux-标签5-1-设置文件和目录-selinux-标签5-1-1-使用-semanage-fcontext-命令和-restorecon-命令设置文件和目录的-selinux-标签5-1-1-1-semanage-fcontext-命令的常用选项">5.1 设置文件和目录 SELinux 标签</h4>



<h5 id="内容五-设置-selinux-标签5-1-设置文件和目录-selinux-标签5-1-1-使用-semanage-fcontext-命令和-restorecon-命令设置文件和目录的-selinux-标签5-1-1-1-semanage-fcontext-命令的常用选项">5.1.1 使用 semanage fcontext 命令和 restorecon 命令设置文件和目录的 SELinux 标签</h5>



<h5 id="内容五-设置-selinux-标签5-1-设置文件和目录-selinux-标签5-1-1-使用-semanage-fcontext-命令和-restorecon-命令设置文件和目录的-selinux-标签5-1-1-1-semanage-fcontext-命令的常用选项">5.1.1.1 semanage fcontext 命令的常用选项</h5>



<p>1) -a 添加或变更 SELinux 标签<br>2) -d 删除 SELinux 标签<br>3) -l 显示所有的 SELinux 标签<br>4) -t 指定上下文 SELinux 标签<br>5) -v 显示修改 SELinux 标签的内容<br>6) -R 递归设置 SELinux 标签<br>7) -m 变更 SELinux 标签</p>



<h5 id="5-1-1-2-使用-semanage-fcontext-命令和-restorecon-命令设置文件和目录的-selinux-标签5-1-1-2-1-使用-smanage-fcontext-命令设置-selinux-标签">5.1.1.2 使用 semanage fcontext 命令和 restorecon 命令设置文件和目录的 SELinux 标签</h5>



<h5 id="5-1-1-2-使用-semanage-fcontext-命令和-restorecon-命令设置文件和目录的-selinux-标签5-1-1-2-1-使用-smanage-fcontext-命令设置-selinux-标签">5.1.1.2.1 使用 smanage fcontext 命令设置 SELinux 标签</h5>



<pre class="wp-block-code"><code># semanage fcontext -a -t httpd_sys_content_t "/tmp(/.*)?"</code></pre>



<p>（补充：这里以将 /tmp(/.*) 的 SELinux 标签设置为 httpd_sys_content_t 为例）</p>



<p>（注意：需要单独安装 policycoreutils-python-utils 后才能使用 semanage 命令）</p>



<h5 id="5-1-1-2-2-使用-restorecon-命令修改默认上下文">5.1.1.2.2 使用 restorecon 命令修改默认上下文</h5>



<pre class="wp-block-code"><code># restorecon -Rv /tmp
Relabeled /tmp from unconfined_u:object_r:default_t:s0 to unconfined_u:object_r:httpd_sys_content_t:s0</code></pre>



<h5 id="5-1-2-使用-chcon-命令设置-selinux-标签">5.1.2 使用 chcon 命令设置 SELinux 标签</h5>



<pre class="wp-block-code"><code># chcon -t httpd_sys_content_t /tmp/*</code></pre>



<p>（补充：这里以将 /tmp/* 的 SELinux 标签设置为 httpd_sys_content_t 为例）</p>



<h4 id="5-2-设置端口-selinux">5.2 设置端口 SELinux</h4>



<pre class="wp-block-code"><code># semanage port -a -t http_port_t -p tcp 82</code></pre>



<p>（补充：这里以将 TCP 82 端口的 SELinux 标签设置为 http_port_t 为例）</p>



<p>（注意：需要单独安装 policycoreutils-python-utils 后才能使用 semanage 命令）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux SELinux 布尔 （boolean） 值的设置</title>
		<link>https://eternalcenter-jun-2022.github.io/selinux-boolean/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Thu, 16 Jul 2020 11:56:09 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[SELinux]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Log (系统日志)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Port Security (系统端口安全)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Security Log (系统安全日志)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=10063</guid>

					<description><![CDATA[内容一：开启 SELinux 布尔（boolean）值 1.1 显示当前 SELinux 状态 1.2 将 SELinux 的状态设置为 Enforcing 以开启布尔（boolean）值 1.2.1 当当前 SELinux 的状态为 Disabled 时开启布尔（boolean）值的方法 1.2.1.1 修改 SELinux 配置文件 将以下内容： 修改为： 1.2.1.2 重启系统 1.2.2 当当前 SELinux 的状态为 Perssive 时开启布尔（boolean）值的方法 （补充：系统重启后失效） 内容二：显示所有 SELinux 布尔（boolean）值 内容三：布尔（boolean）值的管理 3.1 允许某一个 SELinux 布尔（boolean）值开启 3.1.1 临时允许某一个 SELinux 布尔（boolean）值开启 3.1.1.1 临时允许某一个 SELinux 布尔（boolean）值开启的格式 或者： 3.1.1.2 临时允许某一个 SELinux 布尔（boolean）值开启的案例 &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/selinux-boolean/" class="more-link">Continue reading<span class="screen-reader-text"> "[内容] Linux SELinux 布尔 （boolean） 值的设置"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3 id="内容一-开启-selinux-布尔-boolean-值1-1-显示当前-selinux-状态">内容一：开启 SELinux 布尔（boolean）值</h3>



<h4 id="内容一-开启-selinux-布尔-boolean-值1-1-显示当前-selinux-状态">1.1 显示当前 SELinux 状态</h4>



<pre class="wp-block-code"><code># getenforce</code></pre>



<h4 id="1-2-将-selinux-的状态设置为-enforcing-以开启布尔-boolean-值1-2-1-当当前-selinux-的状态为-disabled-时开启布尔-boolean-值的方法1-2-1-1-修改-selinux-配置文件">1.2 将 SELinux 的状态设置为 Enforcing 以开启布尔（boolean）值</h4>



<h5 id="1-2-将-selinux-的状态设置为-enforcing-以开启布尔-boolean-值1-2-1-当当前-selinux-的状态为-disabled-时开启布尔-boolean-值的方法1-2-1-1-修改-selinux-配置文件">1.2.1 当当前 SELinux 的状态为 Disabled 时开启布尔（boolean）值的方法</h5>



<h5 id="1-2-将-selinux-的状态设置为-enforcing-以开启布尔-boolean-值1-2-1-当当前-selinux-的状态为-disabled-时开启布尔-boolean-值的方法1-2-1-1-修改-selinux-配置文件">1.2.1.1 修改 SELinux 配置文件</h5>



<pre class="wp-block-code"><code># vim /etc/selinux/config</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
SELINUX=disabled
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
SELINUX=enforcing
......</code></pre>



<h5 id="1-2-1-2-重启系统">1.2.1.2 重启系统</h5>



<pre class="wp-block-code"><code># reboot</code></pre>



<h5 id="1-2-2-当当前-selinux-的状态为-perssive-时开启布尔-boolean-值的方法">1.2.2 当当前 SELinux 的状态为 Perssive 时开启布尔（boolean）值的方法</h5>



<pre class="wp-block-code"><code># setenfoce 1</code></pre>



<p>（补充：系统重启后失效）</p>



<h3 id="内容二-查看所有-selinux-布尔-boolean-值">内容二：显示所有 SELinux 布尔（boolean）值</h3>



<pre class="wp-block-code"><code># semanage boolean -l</code></pre>



<h3 id="内容三-布尔-boolean-值的管理3-1-允许某一个-selinux-布尔-boolean-值开启3-1-1-临时允许某一个-selinux-布尔-boolean-值开启3-1-1-1-临时允许某一个-selinux-布尔-boolean-值开启的格式">内容三：布尔（boolean）值的管理</h3>



<h4 id="内容三-布尔-boolean-值的管理3-1-允许某一个-selinux-布尔-boolean-值开启3-1-1-临时允许某一个-selinux-布尔-boolean-值开启3-1-1-1-临时允许某一个-selinux-布尔-boolean-值开启的格式">3.1 允许某一个 SELinux 布尔（boolean）值开启</h4>



<h5 id="内容三-布尔-boolean-值的管理3-1-允许某一个-selinux-布尔-boolean-值开启3-1-1-临时允许某一个-selinux-布尔-boolean-值开启3-1-1-1-临时允许某一个-selinux-布尔-boolean-值开启的格式">3.1.1 临时允许某一个 SELinux 布尔（boolean）值开启</h5>



<h5 id="内容三-布尔-boolean-值的管理3-1-允许某一个-selinux-布尔-boolean-值开启3-1-1-临时允许某一个-selinux-布尔-boolean-值开启3-1-1-1-临时允许某一个-selinux-布尔-boolean-值开启的格式">3.1.1.1 临时允许某一个 SELinux 布尔（boolean）值开启的格式</h5>



<pre class="wp-block-code"><code># setsebool &lt;boolean value&gt; 1</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># setsebool &lt;boolean value&gt; on</code></pre>



<h5 id="3-1-1-2-临时允许某一个-selinux-布尔-boolean-值开启的案例">3.1.1.2 临时允许某一个 SELinux 布尔（boolean）值开启的案例</h5>



<pre class="wp-block-code"><code># setsebool httpd_can_network_connect 1</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># setsebool httpd_can_network_connect on</code></pre>



<h5 id="3-1-2-永久允许某一个-selinux-布尔-boolean-值开启3-1-2-1-永久允许某一个-selinux-布尔-boolean-值开启的格式">3.1.2 永久允许某一个 SELinux 布尔（boolean）值开启</h5>



<h5 id="3-1-2-永久允许某一个-selinux-布尔-boolean-值开启3-1-2-1-永久允许某一个-selinux-布尔-boolean-值开启的格式">3.1.2.1 永久允许某一个 SELinux 布尔（boolean）值开启的格式</h5>



<pre class="wp-block-code"><code># setsebool -P &lt;boolean value&gt; 1</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># setsebool -P &lt;boolean value&gt; on</code></pre>



<h5 id="3-1-2-2-永久允许某一个-selinux-布尔-boolean-值开启的案例">3.1.2.2 永久允许某一个 SELinux 布尔（boolean）值开启的案例</h5>



<pre class="wp-block-code"><code># setsebool -P httpd_can_network_connect 1</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># setsebool -P httpd_can_network_connect on</code></pre>



<h4 id="3-2-取消某一个-selinux-布尔-boolean-值开启3-2-1-临时取消某一个-selinux-布尔-boolean-值开启3-2-1-1-临时取消某一个-selinux-布尔-boolean-值开启的格式">3.2 取消某一个 SELinux 布尔（boolean）值开启</h4>



<h5 id="3-2-取消某一个-selinux-布尔-boolean-值开启3-2-1-临时取消某一个-selinux-布尔-boolean-值开启3-2-1-1-临时取消某一个-selinux-布尔-boolean-值开启的格式">3.2.1 临时取消某一个 SELinux 布尔（boolean）值开启</h5>



<h5 id="3-2-取消某一个-selinux-布尔-boolean-值开启3-2-1-临时取消某一个-selinux-布尔-boolean-值开启3-2-1-1-临时取消某一个-selinux-布尔-boolean-值开启的格式">3.2.1.1 临时取消某一个 SELinux 布尔（boolean）值开启的格式</h5>



<pre class="wp-block-code"><code># setsebool &lt;boolean value&gt; 0</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># setsebool &lt;boolean value&gt; off</code></pre>



<h5 id="3-2-1-2-临时取消某一个-selinux-布尔-boolean-值开启的案例">3.2.1.2 临时取消某一个 SELinux 布尔（boolean）值开启的案例</h5>



<pre class="wp-block-code"><code># setsebool httpd_can_network_connect 0</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># setsebool httpd_can_network_connect off</code></pre>



<h5 id="3-2-2-永久取消某一个-selinux-布尔-boolean-值关闭3-2-2-1-永久取消某一个-selinux-布尔-boolean-值开启的格式">3.2.2 永久取消某一个 SELinux 布尔（boolean）值关闭</h5>



<h5 id="3-2-2-永久取消某一个-selinux-布尔-boolean-值关闭3-2-2-1-永久取消某一个-selinux-布尔-boolean-值开启的格式">3.2.2.1 永久取消某一个 SELinux 布尔（boolean）值开启的格式</h5>



<pre class="wp-block-code"><code># setsebool -P &lt;boolean value&gt; 0</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># setsebool -P &lt;boolean value&gt; off</code></pre>



<h5 id="3-2-2-2-永久取消某一个-selinux-布尔-boolean-值开启的案例">3.2.2.2 永久取消某一个 SELinux 布尔（boolean）值开启的案例</h5>



<pre class="wp-block-code"><code># setsebool -P httpd_can_network_connect 0</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># setsebool -P httpd_can_network_connect off</code></pre>



<p></p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 vim （文件编辑）</title>
		<link>https://eternalcenter-jun-2022.github.io/vim/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 30 May 2020 13:48:55 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage (系统存储)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=9629</guid>

					<description><![CDATA[内容一：vim 简介 1.1 vim 模式简介 1) 命令模式：主要用于对文件进行批量编辑2) 末行模式：主要用于保存退出文件3) 输入模式：主要用于编辑文件 1.2 使用 vim 1.2.1 通过 vim 打开某个文件 （补充：此时将自动进入命令模式） 1.2.2 通过 vim 打开某个文件，并自动进入到某行 （补充：此时将自动进入命令模式） 内容二：vim 在命令模式下的操作 2.1 在命令模式下让光标移动 2.1.1 在命令模式下让光标网上移动 按下 &#8220;上方向&#8221; 键 或者： 按下 &#8220;k&#8221; 键 或者： 按下 &#8220;&#60;任意数字&#62;&#8221; 键再按下 &#8220;上方向&#8221; 键 （注意：此方法会向上方移动对应数字个光标位） 2.1.2 在命令模式下让光标网下移动 按下 &#8220;下方向&#8221; 键 或者： 按下 “j” 键 或者： 按下 &#8220;&#60;任意数字&#62;&#8221; 键再按下 &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/vim/" class="more-link">Continue reading<span class="screen-reader-text"> "[命令] Linux 命令 vim （文件编辑）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3 id="内容一-vim-简介1-1-vim-模式简介">内容一：vim 简介</h3>



<h4 id="内容一-vim-简介1-1-vim-模式简介">1.1 vim 模式简介</h4>



<p>1) 命令模式：主要用于对文件进行批量编辑<br>2) 末行模式：主要用于保存退出文件<br>3) 输入模式：主要用于编辑文件</p>



<h4 id="1-2-使用-vim1-2-1-通过-vim-打开某一个文件">1.2 使用 vim</h4>



<h5 id="1-2-使用-vim1-2-1-通过-vim-打开某一个文件">1.2.1 通过 vim 打开某个文件</h5>



<pre class="wp-block-code"><code># vim &lt;file&gt;</code></pre>



<p>（补充：此时将自动进入命令模式）</p>



<h5 id="1-2-2-通过-vim-打开某一个文件-并自动进入到某一行">1.2.2 通过 vim 打开某个文件，并自动进入到某行</h5>



<pre class="wp-block-code"><code># vim +&lt;line number&gt; &lt;file&gt;</code></pre>



<p>（补充：此时将自动进入命令模式）</p>



<h4 id="内容二-vim-在命令模式下的操作2-1-在命令模式下让光标移动2-1-1-在命令模式下让光标网上移动">内容二：vim 在命令模式下的操作</h4>



<h4 id="内容二-vim-在命令模式下的操作2-1-在命令模式下让光标移动2-1-1-在命令模式下让光标网上移动">2.1 在命令模式下让光标移动</h4>



<h5 id="内容二-vim-在命令模式下的操作2-1-在命令模式下让光标移动2-1-1-在命令模式下让光标网上移动">2.1.1 在命令模式下让光标网上移动</h5>



<p>按下 &#8220;上方向&#8221; 键</p>



<p>或者：</p>



<p>按下 &#8220;k&#8221; 键</p>



<p>或者：</p>



<p>按下 &#8220;&lt;任意数字&gt;&#8221; 键再按下 &#8220;上方向&#8221; 键</p>



<p>（注意：此方法会向上方移动对应数字个光标位）</p>



<h5 id="2-1-2-在命令模式下让光标网下移动">2.1.2 在命令模式下让光标网下移动</h5>



<p>按下 &#8220;下方向&#8221; 键</p>



<p>或者：</p>



<p>按下 “j” 键</p>



<p>或者：</p>



<p>按下 &#8220;&lt;任意数字&gt;&#8221; 键再按下 &#8220;下方向&#8221; 键</p>



<p>（注意：此方法会向下方移动对应数字个光标位）</p>



<h5 id="2-1-3-在命令模式下让光标网左移动">2.1.3 在命令模式下让光标网左移动</h5>



<p>按下 &#8220;左方向&#8221; 键</p>



<p>或者：</p>



<p>按下 &#8220;h&#8221; 键</p>



<p>或者：</p>



<p>按下 &#8220;任意数字&#8221; 键之后再按下 &#8220;左方向&#8221; 键</p>



<p>（注意：此方法会向左方移动对应数字个光标位）</p>



<h5 id="2-1-4-在命令模式下让光标网右移动">2.1.4 在命令模式下让光标网右移动</h5>



<p>按下 &#8220;右方向&#8221; 键</p>



<p>或者：</p>



<p>按下 &#8220;l&#8221; 键</p>



<p>或者：</p>



<p>按下 &#8220;&lt;任意数字&gt;&#8221; 之后再按下 &#8220;右方向&#8221; 键</p>



<p>（注意：此方法会向右方移动对应数字个光标位）</p>



<h5 id="2-1-5-在命令模式下让光标移动到文件的指定行数">2.1.5 在命令模式下让光标移动到文件的指定行数</h5>



<p>按下 &#8220;&lt;任意数字&gt;&#8221; 键之后再按下 “G” 键</p>



<p>（注意：此方法会让光标移动到对应数字的行）</p>



<h5 id="2-1-6-在命令模式下让光标移动到文件首尾2-1-6-1-在命令模式下让光标移动到文件首部">2.1.6 在命令模式下让光标移动到文件首尾</h5>



<h5 id="2-1-6-在命令模式下让光标移动到文件首尾2-1-6-1-在命令模式下让光标移动到文件首部">2.1.6.1 在命令模式下让光标移动到文件首部</h5>



<p>按下 “g” 键再按下 “g” 键</p>



<h5 id="2-1-6-2-在命令模式下让光标移动到文件尾部">2.1.6.2 在命令模式下让光标移动到文件尾部</h5>



<p>按下 “G” 键</p>



<h4 id="2-2-在命令模式下删除数据2-2-1-在某一行的范围内删除数据2-2-1-1-在某一行的范围内删除一个字符2-2-1-1-1-在光标所在行的范围内删除光标之后的一个字符">2.2 在命令模式下删除数据</h4>



<h5 id="2-2-在命令模式下删除数据2-2-1-在某一行的范围内删除数据2-2-1-1-在某一行的范围内删除一个字符2-2-1-1-1-在光标所在行的范围内删除光标之后的一个字符">2.2.1 在某行的范围内删除数据</h5>



<h5 id="2-2-在命令模式下删除数据2-2-1-在某一行的范围内删除数据2-2-1-1-在某一行的范围内删除一个字符2-2-1-1-1-在光标所在行的范围内删除光标之后的一个字符">2.2.1.1 在某行的范围内删除一个字符</h5>



<h5 id="2-2-在命令模式下删除数据2-2-1-在某一行的范围内删除数据2-2-1-1-在某一行的范围内删除一个字符2-2-1-1-1-在光标所在行的范围内删除光标之后的一个字符">2.2.1.1.1 在光标所在行的范围内删除光标之后的 1 个字符</h5>



<p>按下 “x” 键</p>



<h5 id="2-2-1-1-2-在光标所在行的范围内删除光标之前的一个字符">2.2.1.1.2 在光标所在行的范围内删除光标之前的 1 个字符</h5>



<p>按下 “X” 键</p>



<h5 id="2-2-1-2-在某一行的范围内删除多个字符2-2-1-2-1-在光标所在行的范围内删除光标之后的多个字符">2.2.1.2 在某行的范围内删除多个字符</h5>



<h5 id="2-2-1-2-在某一行的范围内删除多个字符2-2-1-2-1-在光标所在行的范围内删除光标之后的多个字符">2.2.1.2.1 在光标所在行的范围内删除光标之后的多个字符</h5>



<p>按下 “&lt;任意数字&gt;” 键之后再按下 “x” 键</p>



<p>（注意：此方法会在光标所在行的范围内从光标所在位置开始向后删除对应数字个字符）</p>



<h5 id="2-2-1-2-2-在光标所在行的范围内删除光标之前的多个字符">2.2.1.2.2 在光标所在行的范围内删除光标之前的多个字符</h5>



<p>按下 “&lt;任意数字&gt;” 键之后再按下 “X” 键</p>



<p>（注意：此方法会在光标所在行的范围内从光标所在位置开始向前删除对应数字个字符）</p>



<h5 id="2-2-1-2-3-在光标所在行的范围内删除光标之前的所有字符">2.2.1.2.3 在光标所在行的范围内删除光标之前的所有字符</h5>



<p>同时按下 “d” 键和 “0” 键</p>



<h5 id="2-2-1-2-4-在光标所在行的范围内删除光标之后的所有字符">2.2.1.2.4 在光标所在行的范围内删除光标之后的所有字符</h5>



<p>同时按下 “d” 键和 “$” 键</p>



<h5 id="2-2-2-进行整行的删除2-2-2-1-删除光标所在行">2.2.2 进行整行的删除</h5>



<h5 id="2-2-2-进行整行的删除2-2-2-1-删除光标所在行">2.2.2.1 删除光标所在行</h5>



<p>按下 “d” 键之后再按 “d” 键</p>



<h5 id="2-2-2-2-从光标所在行开始删除多行">2.2.2.2 从光标所在行开始删除多行</h5>



<p>按下 “&lt;任意数字&gt;” 键之后再按 “d” 键之后再按下 “d” 键</p>



<p>（注意：此方法会从光标所在行开始向后删除到对应数字个行）</p>



<h5 id="2-2-2-3-从光标所在行开始删除此行和后面的所有行">2.2.2.3 从光标所在行开始删除此行和后面的所有行</h5>



<p>按下 “d” 键之后再按下 “G” 键</p>



<h5 id="2-2-2-4-从光标所在行开始删除此行和前面的所有行">2.2.2.4 从光标所在行开始删除此行和前面的所有行</h5>



<p>按下 “d” 键之后再按下 “1” 键之后再按下 “G” 键</p>



<p>或者：</p>



<p>按下 “d” 键之后再按下 “g” 键之后再按下 “g” 键</p>



<h5 id="2-2-3-重复相同的删除操作">2.2.3 重复相同的删除操作</h5>



<p>按下 “c” 键</p>



<h4 id="2-3-在命令模式下复制数据2-3-1-在某一行的范围内复制数据2-3-1-3-在光标所在行的范围内复制光标之前的所有字符">2.3 在命令模式下复制数据</h4>



<h5 id="2-3-在命令模式下复制数据2-3-1-在某一行的范围内复制数据2-3-1-3-在光标所在行的范围内复制光标之前的所有字符">2.3.1 在某行的范围内复制数据</h5>



<h5 id="2-3-在命令模式下复制数据2-3-1-在某一行的范围内复制数据2-3-1-3-在光标所在行的范围内复制光标之前的所有字符">2.3.1.3 在光标所在行的范围内复制光标之前的所有字符</h5>



<p>同时按下 “y” 键和 “0” 键</p>



<h5 id="2-3-1-4-在光标所在行的范围内复制光标之后的所有字符">2.3.1.4 在光标所在行的范围内复制光标之后的所有字符</h5>



<p>同时按下 “y” 键和 “$” 键</p>



<h5 id="2-3-2-进行整行的复制2-3-2-1-复制光标所在行">2.3.2 进行整行的复制</h5>



<h5 id="2-3-2-进行整行的复制2-3-2-1-复制光标所在行">2.3.2.1 复制光标所在行</h5>



<p>按下 “y” 键之后再按下 “y” 键</p>



<h5 id="2-3-2-2-从光标所在行开始复制多行">2.3.2.2 从光标所在行开始复制多行</h5>



<p>按下 “&lt;任意数字&gt;” 键之后再按下 “y” 键之后再按下 “y” 键</p>



<p>（注意：此方法会从光标所在行开始向后复制对应数字个行）</p>



<h5 id="2-3-2-3-从光标所在行开始复制此行和后面的所有行">2.3.2.3 从光标所在行开始复制此行和后面的所有行</h5>



<p>按下 “y” 键之后再按下 “G” 键</p>



<h5 id="2-3-2-4-从光标所在行开始复制此行和前面的所有行">2.3.2.4 从光标所在行开始复制此行和前面的所有行</h5>



<p>按下 “y” 键之后再按下 “1” 键之后再按下 “G” 键</p>



<p>或者：</p>



<p>按下 “y” 键之后再按下 “g” 键之后再按下 “g” 键</p>



<h4 id="2-4-在命令模式下复制数据2-4-1-从光标所在行开始向上复制">2.4 在命令模式下复制数据</h4>



<h5 id="2-4-在命令模式下复制数据2-4-1-从光标所在行开始向上复制">2.4.1 从光标所在行开始向上复制</h5>



<p>按下 “p” 键</p>



<h5 id="2-4-2-从光标所在行开始向上复制">2.4.2 从光标所在行开始向上复制</h5>



<p>按下 “P” 键</p>



<h4 id="2-5-在命令模式下进入其他模式2-5-1-在命令模式下进入输入模式">2.5 在命令模式下进入其他模式</h4>



<h5 id="2-5-在命令模式下进入其他模式2-5-1-在命令模式下进入输入模式">2.5.1 在命令模式下进入输入模式</h5>



<p>1) 按下 “i” 键，在光标所在位置进入输入模式<br>2) 按下 “a” 键，在光标所在位置的后 1 个字符进入输入模式<br>3) 按下 “A” 键，在光标所在行的行尾进入插入模式<br>4) 按下 “I” 键，在光标所在行的行首进入插入模式<br>5) 按下 “o” 键，在光标所在行的下 1 行行首进入输入模式</p>



<h5 id="2-5-2-在命令模式下进入末行模式">2.5.2 在命令模式下进入末行模式</h5>



<p>按下 “:” 键</p>



<h5 id="2-5-3-在命令模式下进入视图模式2-5-3-1-以行的方式进入视图模式">2.5.3 在命令模式下进入视图模式</h5>



<h5 id="2-5-3-在命令模式下进入视图模式2-5-3-1-以行的方式进入视图模式">2.5.3.1 以行的方式进入视图模式</h5>



<p>按下 “v” 键</p>



<p>或者：</p>



<p>按下 “V” 键</p>



<h5 id="2-5-3-2-以字符的方式进入视图模式">2.5.3.2 以字符的方式进入视图模式</h5>



<p>同时按下 “ctrl” 键和 “v” 键</p>



<h5 id="2-5-3-3-vim-字符模式的使用案例">2.5.3.3 vim 字符模式的使用案例</h5>



<p>1) 在光标所在行行首，同时按下 “ctrl” 键和 “v” 键再选择对应的行首再按下 “d” 键或者 “x”键，删除在这些行行首的字符<br>2) 在光标所在行行首，同时按下 “ctrl” 键和 “v” 键再选择对应的行首再按下 “I” 键再输入 &lt;content&gt; 再按 “esc” 键，在这些行行首插入这些内容<br>3) 在光标所在行行首，同时按下 “ctrl” 键和 “v” 键再按下再按 “I” 键再按下 “g” 键再按 “g” 键再输入 &lt;content&gt; 再按 “esc” 键，在光标所在行以及前面的所有行的行首插入这些内容<br>4) 在光标所在行行首，同时按下 “ctrl” 键和 “v” 键再按下再按 “I” 键再按下 “G” 键再输入 &lt;content&gt; 再按 “esc” 键，在这光标所在行以及后面的所有行的行首插入这些内容</p>



<h5 id="2-5-4-在命令模式下进入替换模式">2.5.4 在命令模式下进入替换模式</h5>



<p>按下 “R” 键</p>



<h4 id="2-6-在命令模式下的其他操作2-6-1-将光标所在行与下面的行合并">2.6 在命令模式下的其他操作</h4>



<h5 id="2-6-在命令模式下的其他操作2-6-1-将光标所在行与下面的行合并">2.6.1 将光标所在行与下面的行合并</h5>



<p>按下 “J” 键</p>



<h5 id="2-6-2-重复上一动作">2.6.2 重复上 1 个动作</h5>



<p>按下 “ctrl” 键和 “r” 键</p>



<p>或者：</p>



<p>按下 “.“ 键</p>



<h5 id="2-6-3-撤销上一个动作">2.6.3 撤销上 1 个动作</h5>



<p>按下 “u” 键</p>



<h5 id="2-6-4-保存此文当并退出-vim-模式">2.6.4 保存此文当并退出 vim 模式</h5>



<p>按下 “Z” 键之后再按下 “Z” 键</p>



<h3 id="内容三-vim-在末行模式下的操作3-1-在末行模式下对当前内容进行保存并退出-vim-模式">内容三：vim 在末行模式下的操作</h3>



<h4 id="内容三-vim-在末行模式下的操作3-1-在末行模式下对当前内容进行保存并退出-vim-模式">3.1 在末行模式下对当前内容进行保存并退出 vim 模式</h4>



<p>1) :w 保存当前内容<br>2) :w! 强制保存当前内容<br>3) :w &lt;file&gt; 保存当前内容到另 1 个名为 &lt;file&gt; 文件<br>4) :w! &lt;file&gt; 强制保存当前内容到另 1 个名为 &lt;file&gt; 文件<br>5) :q 退出 vim<br>6) :q! 强制推出 vim<br>7) :wq 保存当前内容并退出<br>8) :wq! 强制保存当前内容并退出<br>9) :wq &lt;file&gt; 保存当前内容到另 1 个名为 &lt;file&gt; 文件并退出<br>10) :wq! &lt;file&gt; 强制保存当前内容到另 1 个名为 &lt;file&gt; 文件并退出<br>11) :e! 放弃当前所有修改，将内容恢复到上次保存时</p>



<h4 id="3-2-在末行模式下的行号设置3-2-1-设置行号">3.2 在末行模式下的行号设置</h4>



<h5 id="3-2-在末行模式下的行号设置3-2-1-设置行号">3.2.1 设置行号</h5>



<pre class="wp-block-code"><code>:set nu</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>:set number</code></pre>



<h5 id="3-2-2-取消行号">3.2.2 取消行号</h5>



<pre class="wp-block-code"><code>:set nonu</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>:set nonumber</code></pre>



<h4 id="3-3-在末行模式下搜索3-3-1-在末行模式下搜索关键字3-3-1-1-向下查找匹配的关键字">3.3 在末行模式下搜索</h4>



<h5 id="3-3-在末行模式下搜索3-3-1-在末行模式下搜索关键字3-3-1-1-向下查找匹配的关键字">3.3.1 在末行模式下搜索关键字</h5>



<h5 id="3-3-在末行模式下搜索3-3-1-在末行模式下搜索关键字3-3-1-1-向下查找匹配的关键字">3.3.1.1 向下查找匹配的关键字</h5>



<p>:/&lt;key word&gt; 之后按 “n” 键或者 “N” 键显示下 1 个匹配的关键字</p>



<h5 id="3-3-1-2-向上查找匹配的关键字">3.3.1.2 向上查找匹配的关键字</h5>



<p>:？&lt;key word&gt; 之后按 “n” 键或者 “N” 键显示下 1 个匹配的关键字</p>



<h5 id="3-3-2-在末行模式下搜索行号">3.3.2 在末行模式下搜索行号</h5>



<p>:&lt;line number&gt; 之后按 “回车” 键</p>



<h5 id="3-4-在末行模式下替换关键字的案例">3.4 在末行模式下替换关键字的案例</h5>



<p>1) :s /&lt;old keyword&gt;/&lt;new keyword&gt; #以 &lt;new keyword&gt; 替换光标所在行的第 1 个 &lt;old keyword&gt;<br>2) :s /&lt;old keyword&gt;/&lt;new keyword&gt;/g #以 &lt;new keyword&gt; 替换光标所在行的所有 &lt;old keyword&gt;<br>3) :1,5 s/&lt;old keyword&gt;/&lt;new keyword&gt;/g #以 &lt;new keyword&gt; 替换从 1 到 5 行的所有 &lt;old keyword&gt;<br>4) :,+5 s/&lt;old keyword&gt;/&lt;new keyword&gt;/g #以 &lt;new keyword&gt; 替换从光标所在行开始 5 行的所有 &lt;old keyword&gt;<br>5) :7,%s/&lt;old keyword&gt;/&lt;new keyword&gt;/g #以 &lt;new keyword&gt; 替换倒数第 7 行到最后 1 行的所有 &lt;old keyword&gt;<br>6) :%s/&lt;old keyword&gt;/&lt;new keyword&gt;/g #以 &lt;new keyword&gt; 替换全文的所有 &lt;old keyword&gt;</p>



<h4 id="3-5-在末行模式进入命令模式">3.5 在末行模式进入命令模式</h4>



<p>:按下 “esc” 键</p>



<h4 id="3-6-在末行模式下的其他设置">3.6 在末行模式下的其他设置</h4>



<p>1) :w /&lt;file&gt;，将当前内容另存为另 1 个名为 &lt;file&gt; 文件<br>2) :r /&lt;file&gt;，读取 &lt;file&gt; 文件里的内容到文本并直接插入到光标所在位置<br>3) :! &lt;command&gt;，在 vim 的命末行模式时使用 Linux 命令 &lt;command&gt;</p>



<h3 id="内容四-vim-在输入模式下的操作4-1-在输入模式下输入内容">内容四：vim 在输入模式下的操作</h3>



<h4 id="内容四-vim-在输入模式下的操作4-1-在输入模式下输入内容">4.1 在输入模式下输入内容</h4>



<p>正常键入内容即可</p>



<h4 id="4-2-在输入模式下进入命令模式">4.2 在输入模式下进入命令模式</h4>



<p>按下 “esc” 键</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux 通佩符</title>
		<link>https://eternalcenter-jun-2022.github.io/wildcard/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Thu, 28 May 2020 14:38:25 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Directory (系统目录)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage (系统存储)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=9566</guid>

					<description><![CDATA[内容一：Linux 通佩符 1.1 匹配任意一个字符 1.2 匹配任意多个字符 1.3 匹配任意多个字符中的一个 或者： 1.4 不匹配任意多个字符中的一个 或者： 1.5 匹配一段连续的字符 内容二：Linux 通佩符的使用案例 2.1 案例一：多循环匹配文件或目录 2.2 案例二：匹配所有文件和目录，包括隐藏文件和目录]]></description>
										<content:encoded><![CDATA[
<h3>内容一：Linux 通佩符</h3>



<h4>1.1 匹配任意一个字符</h4>



<pre class="wp-block-code"><code>？</code></pre>



<h4>1.2 匹配任意多个字符</h4>



<pre class="wp-block-code"><code>*</code></pre>



<h4>1.3 匹配任意多个字符中的一个</h4>



<pre class="wp-block-code"><code>&#91;&lt;character&gt;&lt;character&gt;&lt;character&gt;]</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>{&lt;character&gt;,&lt;character&gt;,&lt;character&gt;}</code></pre>



<h4>1.4 不匹配任意多个字符中的一个</h4>



<pre class="wp-block-code"><code>&#91;^&lt;character&gt;&lt;character&gt;&lt;character&gt;]</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>&#91;!&lt;character&gt;&lt;character&gt;&lt;character&gt;]</code></pre>



<h4>1.5 匹配一段连续的字符</h4>



<pre class="wp-block-code"><code>{&lt;head character&gt;...&lt;tail character&gt;}</code></pre>



<h3>内容二：Linux 通佩符的使用案例</h3>



<h4>2.1 案例一：多循环匹配文件或目录</h4>



<pre class="wp-block-code"><code># touch {a..b}{1..3}.txt
# ls
a1.txt  a2.txt  a3.txt  b1.txt  b2.txt  b3.txt</code></pre>



<h4>2.2 案例二：匹配所有文件和目录，包括隐藏文件和目录</h4>



<pre class="wp-block-code"><code># cd /tmp
# tar -zcvf /home/zhumingyu/all.tar.gz .&#91;!.]* *</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 cd （目录切换）</title>
		<link>https://eternalcenter-jun-2022.github.io/cd/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Thu, 28 May 2020 13:58:38 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Directory (系统目录)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage (系统存储)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=9564</guid>

					<description><![CDATA[内容一：进入到某一个目录 内容二：进入当前用户的家目录 或者： 内容三：返回之前的目录 内容四：进入当前目录 内容五：进入当前目录的上一级目录]]></description>
										<content:encoded><![CDATA[
<h3>内容一：进入到某一个目录</h3>



<pre class="wp-block-code"><code># cd &lt;directory&gt;</code></pre>



<h3>内容二：进入当前用户的家目录</h3>



<pre class="wp-block-code"><code># cd</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># cd ~</code></pre>



<h3>内容三：返回之前的目录</h3>



<pre class="wp-block-code"><code># cd -</code></pre>



<h3>内容四：进入当前目录</h3>



<pre class="wp-block-code"><code># cd .</code></pre>



<h3>内容五：进入当前目录的上一级目录</h3>



<pre class="wp-block-code"><code># cd ..</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 less （显示文本） （多功能版）</title>
		<link>https://eternalcenter-jun-2022.github.io/less/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Wed, 27 May 2020 15:03:02 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=9550</guid>

					<description><![CDATA[内容一：less 命令的使用格式 （补充：这样就会进入到这个文件的 less 显示模式） 内容二：进入 less 显示模式后的可用操作 1) 按下 “空格” 键，显示文件后面的内容2) 按下 “page up” 键，翻页文件后面的内容3) 按下 “page up” 键，翻一页到文件前面的内容4) 按下 “q” 键，退出 less]]></description>
										<content:encoded><![CDATA[
<h3 id="内容一-less-命令的使用格式">内容一：less 命令的使用格式</h3>



<pre class="wp-block-code"><code># less &lt;file&gt;</code></pre>



<p>（补充：这样就会进入到这个文件的 less 显示模式）</p>



<h3 id="内容二-进入-less-显示模式后的可用操作">内容二：进入 less 显示模式后的可用操作</h3>



<p>1) 按下 “空格” 键，显示文件后面的内容<br>2) 按下 “page up” 键，翻页文件后面的内容<br>3) 按下 “page up” 键，翻一页到文件前面的内容<br>4) 按下 “q” 键，退出 less</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 more （显示文本）</title>
		<link>https://eternalcenter-jun-2022.github.io/more/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Wed, 27 May 2020 15:00:45 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=9548</guid>

					<description><![CDATA[内容一：more 命令的格式 （补充：这样就会进入到这个文件的 more 显示模式） 内容二：进入 more 显示模式后的可用操作 1) 按下 “空格” 键，显示文件后面的内容2) 按下 “q” 键，退出 more 显示模式]]></description>
										<content:encoded><![CDATA[
<h3 id="内容一-more-命令的格式">内容一：more 命令的格式</h3>



<pre class="wp-block-code"><code># more &lt;file&gt;</code></pre>



<p>（补充：这样就会进入到这个文件的 more 显示模式）</p>



<h3 id="内容二-进入-more-显示模式后的可用操作">内容二：进入 more 显示模式后的可用操作</h3>



<p>1) 按下 “空格” 键，显示文件后面的内容<br>2) 按下 “q” 键，退出 more 显示模式</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[命令] Linux 命令 head （显示文本的前几行）</title>
		<link>https://eternalcenter-jun-2022.github.io/head/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Wed, 27 May 2020 14:57:32 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=9546</guid>

					<description><![CDATA[内容一：head 命令的格式 内容二：head 命令的使用案例 2.1 案例一 （补充：这里以显示 /etc/passwd 文件的前 5 行为例） 2.2 案例二 （补充：这里以显示 /etc/passwd 文件的前 2 行为例） 2.3 案例三 （补充：这里以显示 /etc/passwd 文件的除后 2 行的所有行为例）]]></description>
										<content:encoded><![CDATA[
<h3 id="内容一-head-命令的格式">内容一：head 命令的格式</h3>



<pre class="wp-block-code"><code># head -&lt;number&gt; &lt;file&gt;</code></pre>



<pre class="wp-block-code"><code>（
补充：
1) 这里的数字是几就是显示文件里的开头几行
2) 不输入数字则默认显示文件里的开头 10 行
）</code></pre>



<h3 id="内容二-head-命令的使用案例-2-1-案例一">内容二：head 命令的使用案例</h3>



<h4 id="内容二-head-命令的使用案例-2-1-案例一">2.1 案例一</h4>



<pre class="wp-block-code"><code># head -5 /etc/passwd</code></pre>



<p>（补充：这里以显示 /etc/passwd 文件的前 5 行为例）</p>



<h4 id="2-2-案例二">2.2 案例二</h4>



<pre class="wp-block-code"><code># head -n +2 /etc/passwd</code></pre>



<p>（补充：这里以显示 /etc/passwd 文件的前 2 行为例）</p>



<h4 id="2-3-案例三">2.3 案例三</h4>



<pre class="wp-block-code"><code># head -n -2 /etc/passwd</code></pre>



<p>（补充：这里以显示 /etc/passwd 文件的除后 2 行的所有行为例）</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
