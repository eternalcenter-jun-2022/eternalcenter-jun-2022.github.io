<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>System Setting (系统设置) &#8211; Eternal Center</title>
	<atom:link href="https://eternalcenter-jun-2022.github.io/category/system/system-operation-system-setting-system-software/system-setting/feed/" rel="self" type="application/rss+xml" />
	<link>https://eternalcenter-jun-2022.github.io/</link>
	<description></description>
	<lastBuildDate>Sat, 25 Jun 2022 13:38:45 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	
	<item>
		<title>[内容] Linux 命令安全的设置</title>
		<link>https://eternalcenter-jun-2022.github.io/command-secure/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 25 Jun 2022 13:37:57 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Privilege Security (系统权限安全)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=26174</guid>

					<description><![CDATA[确保以下目录的所属主和所属组是 root，且其它用户没有写入权限：]]></description>
										<content:encoded><![CDATA[
<p>确保以下目录的所属主和所属组是 root，且其它用户没有写入权限：</p>



<pre class="wp-block-code"><code># ls -ld /usr/local/bin /usr/local/sbin /usr/bin/ /usr/sbin
dr-xr-xr-x. 2 root root 53248 Jun 24 15:09 /usr/bin/
drwxr-xr-x. 3 root root  4096 Jun 21  2021 /usr/local/bin
drwxr-xr-x. 2 root root     6 Jun 21  2021 /usr/local/sbin
dr-xr-xr-x. 2 root root 20480 Jun 24 15:09 /usr/sbin</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] 软件源的设置 （SUSE 版） （通过本地镜像版）</title>
		<link>https://eternalcenter-jun-2022.github.io/repository-suse-local/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 20 Jun 2022 08:10:56 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Computer & System Hardware & System Installation & System Upgradation (系统电脑 & 系统硬件 & 系统安装 & 系统升级)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Patch (系统补丁)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System Software (系统软件)]]></category>
		<category><![CDATA[System Upgradation (系统升级)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=25888</guid>

					<description><![CDATA[步骤一：加载本地镜像到系统光驱 （步骤略） 步骤二：挂载本地镜像 （补充：这里以挂载 /dev/sr1 到 /mnt 目录为例） 步骤三：添加本地镜里的软件源 3.1 添加本地镜里的软件源 （通过 zypper 命令） 或者： （补充：这里以将1) /mnt/Module-Basesystem 添加到软件源并命名为 SLE15-Base2) /mnt/Module-Legacy 添加到软件源并命名为 SLE15-Legacy3) /mnt/Module-Development-Tools 添加到软件源并命名为 SLE15-Tools为例） 3.1 添加本地镜里的软件源 （通过创建配置文件） 创建以下内容： 创建以下内容： 创建以下内容： （补充：这里以将1) /mnt/Module-Basesystem 添加到软件源并命名为 SLE15-Base2) /mnt/Module-Legacy 添加到软件源并命名为 SLE15-Legacy3) /mnt/Module-Development-Tools 添加到软件源并命名为 SLE15-Tools为例）]]></description>
										<content:encoded><![CDATA[
<h2>步骤一：加载本地镜像到系统光驱</h2>



<p>（步骤略）</p>



<h2>步骤二：挂载本地镜像</h2>



<pre class="wp-block-code"><code># mount /dev/cdrom /mnt</code></pre>



<p>（补充：这里以挂载 /dev/sr1 到 /mnt 目录为例）</p>



<h2>步骤三：添加本地镜里的软件源</h2>



<h4>3.1 添加本地镜里的软件源 （通过 zypper 命令）</h4>



<pre class="wp-block-code"><code># zypper ar file:/mnt/Module-Basesystem SLE15-Base
# zypper ar file:/mnt/Module-Legacy SLE15-Legacy
# zypper ar file:/mnt/Module-Development-Tools SLE15-Tools</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># zypper ar -f /mnt/Module-Basesystem SLE15-Base
# zypper ar -f /mnt/Module-Legacy SLE15-Legacy
# zypper ar -f /mnt/Module-Development-Tools SLE15-Tools</code></pre>



<p>（<br>补充：这里以将<br>1) /mnt/Module-Basesystem 添加到软件源并命名为 SLE15-Base<br>2) /mnt/Module-Legacy 添加到软件源并命名为 SLE15-Legacy<br>3) /mnt/Module-Development-Tools 添加到软件源并命名为 SLE15-Tools<br>为例<br>）</p>



<h4>3.1 添加本地镜里的软件源 （通过创建配置文件）</h4>



<pre class="wp-block-code"><code># vim /etc/zypp/repos.d/SLE15-Base.repo</code></pre>



<p>创建以下内容：</p>



<pre class="wp-block-code"><code>&#91;SLE15-Base]
enabled=1
autorefresh=0
baseurl=file:/mnt/Module-Development-Tools</code></pre>



<pre class="wp-block-code"><code># vim /etc/zypp/repos.d/SLE15-Legacy.repo</code></pre>



<p>创建以下内容：</p>



<pre class="wp-block-code"><code>&#91;SLE15-Legacy]
enabled=1
autorefresh=0
baseurl=file:/mnt/Module-Legacy</code></pre>



<pre class="wp-block-code"><code># vim /etc/zypp/repos.d/SLE15-Tools.repo</code></pre>



<p>创建以下内容：</p>



<pre class="wp-block-code"><code>&#91;SLE15-Tools]
enabled=1
autorefresh=0
baseurl=file:/mnt/Module-Basesystem/</code></pre>



<p>（<br>补充：这里以将<br>1) /mnt/Module-Basesystem 添加到软件源并命名为 SLE15-Base<br>2) /mnt/Module-Legacy 添加到软件源并命名为 SLE15-Legacy<br>3) /mnt/Module-Development-Tools 添加到软件源并命名为 SLE15-Tools<br>为例<br>）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] wtmp 日志保存时间默认策略的设置 （设置 last 命令可以显示多久以前记录）</title>
		<link>https://eternalcenter-jun-2022.github.io/wtmp/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 17 Jun 2022 13:15:11 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Log (系统日志)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Security Log (系统安全日志)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=24466</guid>

					<description><![CDATA[如果是 Rocky Linux &#38; RHEL： （补充：1) 影响的日志文件有 /var/log/wtmp （/var/log/wtmp）2) 每月将现在的日志文件进行备份并生成新的日志文件 （monthly）3) 日志文件权限是 0644 所属主是 root （create 0664 root utmp）4) 只有当日志文件超过 1 M 时，且达到备份的时间才会开始备份5) 备份的日志文件保留 5 份 （rotate 1）） 如果是 openSUSE &#38; SUSE： （补充：1) 影响的日志文件有 /var/log/wtmp 和 /var/log/btmp （/var/log/wtmp /var/log/btmp）2) 对备份的日志文件进行压缩 （compress）3) 将 YYYYMMDD 格式的时间作为备份日志文件名的一部分 （dateext）4) 日志最多保存 365 天 （maxage 365）5) 备份的日志文件保留 99 份 （rotate 99）6) &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/wtmp/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] wtmp 日志保存时间默认策略的设置 （设置 last 命令可以显示多久以前记录）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<p>如果是 Rocky Linux &amp; RHEL：</p>



<pre class="wp-block-code"><code># cat /etc/logrotate.conf
......
/var/log/wtmp {
    monthly
    create 0664 root utmp
        minsize 1M
    rotate 1
}
......</code></pre>



<p>（<br>补充：<br>1) 影响的日志文件有 /var/log/wtmp （/var/log/wtmp）<br>2) 每月将现在的日志文件进行备份并生成新的日志文件 （monthly）<br>3) 日志文件权限是 0644 所属主是 root （create 0664 root utmp）<br>4) 只有当日志文件超过 1 M 时，且达到备份的时间才会开始备份<br>5) 备份的日志文件保留 5 份 （rotate 1）<br>）</p>



<p>如果是 openSUSE &amp; SUSE：</p>



<pre class="wp-block-code"><code># cat /etc/logrotate.d/wtmp
/var/log/wtmp /var/log/btmp {
    compress
    dateext
    maxage 365
    rotate 99
    size=+400k
    notifempty
    missingok
    copytruncate
}</code></pre>



<p>（<br>补充：<br>1) 影响的日志文件有 /var/log/wtmp 和 /var/log/btmp （/var/log/wtmp /var/log/btmp）<br>2) 对备份的日志文件进行压缩 （compress）<br>3) 将 YYYYMMDD 格式的时间作为备份日志文件名的一部分 （dateext）<br>4) 日志最多保存 365 天 （maxage 365）<br>5) 备份的日志文件保留 99 份 （rotate 99）<br>6) 现在的日志文件超过 400 k 就开始备份，不用考虑备份时间，且备份时间的相关设置也将无效 （size=+400k）<br>7) 如果现有日志文件是空文件，则不再对日志文件进行备份 （notifempty）<br>8) 如果现有日志文件丢失，则不报错直接生成新的日志文件 （missingok）<br>）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux 环境变量 （$PATH） 的设置</title>
		<link>https://eternalcenter-jun-2022.github.io/environment-variable/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 17 Jun 2022 06:23:44 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System User (系统用户)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=24425</guid>

					<description><![CDATA[内容一：临时设置环境变量 （$PATH） 1.1 查看当前环境变量 （$PATH） 值 1.2 临时设置环境变量 （$PATH） 值 内容二：永久设置环境变量 （$PATH） 2.1 给某个用户设置永久环境变量 2.1.1 切换到要永久设置环境变量 （$PATH）的用户 （补充：这里以切换到 root 用户为例） 2.1.2 配置 ~/.bashrc 配置文件 添加以下内容： （补充： 这里以将环境变量 （$PATH） 设置为 /usr/locar/new/bin 为例） 2.1.3 让环境变量 （$PATH） 设置生效 2.2 全局永久设置环境变量 2.2.1 配置 /etc/profile 配置文件 添加以下内容： （补充： 这里以将环境变量 （$PATH） 设置为 /usr/locar/new/bin 为例） 2.2.2 让环境变量 （$PATH） 设置生效]]></description>
										<content:encoded><![CDATA[
<h3 class="has-text-align-left">内容一：临时设置环境变量 （$PATH）</h3>



<h4 class="has-text-align-left">1.1 查看当前环境变量 （$PATH） 值</h4>



<pre class="wp-block-code"><code># echo $PATH</code></pre>



<h4>1.2 临时设置环境变量 （$PATH） 值</h4>



<pre class="wp-block-code"><code># export PATH=$PATH:/usr/locar/new/bin</code></pre>



<h3>内容二：永久设置环境变量 （$PATH）</h3>



<h4>2.1 给某个用户设置永久环境变量</h4>



<h5>2.1.1 切换到要永久设置环境变量 （$PATH）的用户</h5>



<pre class="wp-block-code"><code># su - root</code></pre>



<p>（补充：这里以切换到 root 用户为例）</p>



<h5>2.1.2 配置 ~/.bashrc 配置文件</h5>



<pre class="wp-block-code"><code># vim ~/.bashrc</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
export PATH=$PATH:/usr/locar/new/bin</code></pre>



<p>（补充： 这里以将环境变量 （$PATH） 设置为 /usr/locar/new/bin 为例）</p>



<h5>2.1.3 让环境变量 （$PATH） 设置生效</h5>



<pre class="wp-block-code"><code># source ~/.bashrc</code></pre>



<h4>2.2 全局永久设置环境变量</h4>



<h5>2.2.1 配置 /etc/profile 配置文件</h5>



<pre class="wp-block-code"><code># vim /etc/profile</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
export PATH=$PATH:/usr/locar/new/bin</code></pre>



<p>（补充： 这里以将环境变量 （$PATH） 设置为 /usr/locar/new/bin 为例）</p>



<h5>2.2.2 让环境变量 （$PATH） 设置生效</h5>



<pre class="wp-block-code"><code># source /etc/profile</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux sudo 命令安全的加强</title>
		<link>https://eternalcenter-jun-2022.github.io/sudo-secure-enhance/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 17 Jun 2022 03:20:21 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Privilege (系统权限)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=24376</guid>

					<description><![CDATA[仅让 use pty 可以使用 sudo 命令 （避免后台进程使用 sudo 命令） 或者： 添加以下内容：]]></description>
										<content:encoded><![CDATA[
<p>仅让 use pty 可以使用 sudo 命令 （避免后台进程使用 sudo 命令）</p>



<pre class="wp-block-code"><code># vim /etc/sudoers</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># visudo</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
Defaults use_pty</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux sudo 日志的开启</title>
		<link>https://eternalcenter-jun-2022.github.io/sudo-log/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 17 Jun 2022 03:14:07 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Log (系统日志)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Privilege (系统权限)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Security Log (系统安全日志)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=24372</guid>

					<description><![CDATA[步骤一：开启 sudo 日志 或者： 添加以下内容： 步骤二：显示 sudo 日志 2.1 退出后重新登陆 （步骤略） 2.2 显示 sudo 日志]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：开启 sudo 日志</h3>



<pre class="wp-block-code"><code># vim /etc/sudoers</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code># visudo</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
Defaults logfile="/var/log/sudo.log"</code></pre>



<h3>步骤二：显示 sudo 日志</h3>



<h4>2.1 退出后重新登陆</h4>



<p>（步骤略）</p>



<h4>2.2 显示 sudo 日志</h4>



<pre class="wp-block-code"><code># cat /var/log/sudo.log</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] 解决 Linux 执行 ping 命令检测网络联通性时报错 “connect: Network is unreachable”</title>
		<link>https://eternalcenter-jun-2022.github.io/debug-connect-network-is-unreachable/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Wed, 15 Jun 2022 15:22:51 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Network (系统网络)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=24286</guid>

					<description><![CDATA[报错代码 分析 当配置的 IP 地址和子网掩码不包含配置的网关 IP 地址时，检测网络联通性时就会报此类错误 解决方法 配置正确的 IP 地址、子网掩码或网关 IP 地址（步骤略）]]></description>
										<content:encoded><![CDATA[
<h2> 报错代码</h2>



<pre class="wp-block-code"><code>connect: Network is unreachable</code></pre>



<h2>分析</h2>



<p>当配置的 IP 地址和子网掩码不包含配置的网关 IP 地址时，检测网络联通性时就会报此类错误</p>



<h2>解决方法</h2>



<p>配置正确的 IP 地址、子网掩码或网关 IP 地址<br>（步骤略）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] 解决 Linux 执行 crontab -e 命令时报错 “You (&#8230;&#8230;) are not allowed to use this program (crontab)”</title>
		<link>https://eternalcenter-jun-2022.github.io/debug-you-are-not-allowed-to-use-this-program-crontab/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 10 Jun 2022 10:07:51 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Performance (系统性能)]]></category>
		<category><![CDATA[System Port Security (系统端口安全)]]></category>
		<category><![CDATA[System Privilege (系统权限)]]></category>
		<category><![CDATA[System Process (系统进程)]]></category>
		<category><![CDATA[System Process & System Performance (系统进程 & 系统性能)]]></category>
		<category><![CDATA[System Process Security (系统进程安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System User (系统用户)]]></category>
		<category><![CDATA[System User & System Privilege (系统用户 & 系统权限)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23780</guid>

					<description><![CDATA[解决方法 如果在系统中没有 /etc/cron.deny 配置文件，在 /etc/cron.allow 配置文件中添加要使用 crontab -e 命令的用户 添加以下内容： （补充：这里以添加用户 zhumingyu 为例） 如果在系统中没有 /etc/cron.allow 配置文件，在 /etc/cron.allow 配置文件中删除要使用 crontab -e 命令的用户 删除以下内容： （补充：这里以删除用户 zhumingyu 为例）]]></description>
										<content:encoded><![CDATA[
<h2>解决方法</h2>



<p>如果在系统中没有 /etc/cron.deny 配置文件，在 /etc/cron.allow 配置文件中添加要使用 crontab -e 命令的用户</p>



<pre class="wp-block-code"><code># vim /etc/cron.allow</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
zhumingyu</code></pre>



<p>（补充：这里以添加用户 zhumingyu 为例）</p>



<p>如果在系统中没有 /etc/cron.allow 配置文件，在 /etc/cron.allow 配置文件中删除要使用 crontab -e 命令的用户</p>



<pre class="wp-block-code"><code># vim /etc/cron.allow</code></pre>



<p>删除以下内容：</p>



<pre class="wp-block-code"><code>......
zhumingyu
......</code></pre>



<p>（补充：这里以删除用户 zhumingyu 为例）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Linux SSH 常用安全加强配置项</title>
		<link>https://eternalcenter-jun-2022.github.io/sshd-security-enhance/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 06 Jun 2022 15:43:57 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Port Security (系统端口安全)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23701</guid>

					<description><![CDATA[内容一：SSH 的配置文件 内容二：SSH 常用安全加强配置项 2.1 忽略 Rhosts 认证 2.2 禁止 root 用户通过 SSH 登录 2.3 禁止空密码 SSH 登录 2.4 将 SSH 登录信息写入系统日志 2.5 记录全部 SSH 信息 2.6 设置 SSH 最大尝试登录失败次数 （补充：这里以设置 SSH 登录失败 5 次后禁止登录一段时间为例） 2.7 设置 SSH 登录时密码输入的时间 （补充：这里以设置 SSH 登录时密码输入的时间为 600 秒为例） 2.8 禁止 SSH 图形界面转发 2.9 不现实显示上次 SSH 登录的信息，例如时间和地点等 或者： 2.10 设置同时只能让几个 &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/sshd-security-enhance/" class="more-link">Continue reading<span class="screen-reader-text"> "[内容] Linux SSH 常用安全加强配置项"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>内容一：SSH 的配置文件</h3>



<pre class="wp-block-code"><code>/etc/ssh/sshd_config</code></pre>



<h3>内容二：SSH 常用安全加强配置项</h3>



<h4>2.1 忽略 Rhosts 认证</h4>



<pre class="wp-block-code"><code>IgnoreRhosts yes</code></pre>



<h4>2.2 禁止 root 用户通过 SSH 登录</h4>



<pre class="wp-block-code"><code>PermitRootLogin no</code></pre>



<h4>2.3 禁止空密码 SSH 登录</h4>



<pre class="wp-block-code"><code>PermitEmptyPasswords no</code></pre>



<h4>2.4 将 SSH 登录信息写入系统日志</h4>



<pre class="wp-block-code"><code>SyslogFacility AUTH</code></pre>



<h4>2.5 记录全部 SSH 信息</h4>



<pre class="wp-block-code"><code>LogLevel INFO</code></pre>



<h4>2.6 设置 SSH 最大尝试登录失败次数</h4>



<pre class="wp-block-code"><code>MaxAuthTries 5</code></pre>



<p>（补充：这里以设置 SSH 登录失败 5 次后禁止登录一段时间为例）</p>



<h4>2.7 设置 SSH 登录时密码输入的时间</h4>



<pre class="wp-block-code"><code>LoginGraceTime 600</code></pre>



<p>（补充：这里以设置 SSH 登录时密码输入的时间为 600 秒为例）</p>



<h4>2.8 禁止 SSH 图形界面转发</h4>



<pre class="wp-block-code"><code>X11Forwarding no</code></pre>



<h4>2.9 不现实显示上次 SSH 登录的信息，例如时间和地点等</h4>



<pre class="wp-block-code"><code>PrintMotd no</code></pre>



<p>或者：</p>



<pre class="wp-block-code"><code>PrintLastLog no</code></pre>



<h4>2.10 设置同时只能让几个 SSH 用户登录</h4>



<pre class="wp-block-code"><code>MaxStartups 10</code></pre>



<p>（补充：这里以同时只能让 10 个用户 SSH 登录为例）</p>



<h4>2.11 设置客户端 SSH 连接时间限制</h4>



<pre class="wp-block-code"><code>ClientAliveInterval 3600</code></pre>



<p>（补充：这里以设置客户端 SSH 连接时间为 3600 秒为例）</p>



<h4>2.12 只允许某 IP 地址可以 SSH 本服务器</h4>



<h5>2.12.1 启用 UseTCPWrappers 参数</h5>



<pre class="wp-block-code"><code># vim /etc/ssh/sshd_config</code></pre>



<p>将部分内容修改如下：</p>



<pre class="wp-block-code"><code>......
UseTCPWrappers yes
......</code></pre>



<h5>2.12.2 禁止所有 IP 地址可以 SSH 本服务器</h5>



<pre class="wp-block-code"><code># /etc/hosts.deny</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
sshd : ALL </code></pre>



<h5>2.12.3 只允许某 IP 地址可以 SSH 本服务器</h5>



<pre class="wp-block-code"><code># vim /etc/hosts.deny</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
sshd : 192.168.0.1/32 : ALLOW
sshd : ALL</code></pre>



<p>（补充：这里以允许 IP 地址 192.168.0.1 可以 SSH 本服务器为例）</p>



<p>（注意：这和防火墙的策略一样从上往下匹配及停止，所以允许某 IP 地址可以 SSH 本服务器的策略一定要加在禁止所有 IP 地址可以 SSH 本服务器的策略之前）</p>



<h4>2.13 禁止某 IP 地址可以 SSH 本服务器</h4>



<h5>2.13.1 启用 UseTCPWrappers 参数</h5>



<pre class="wp-block-code"><code># vim /etc/ssh/sshd_config</code></pre>



<p>将部分内容修改如下：</p>



<pre class="wp-block-code"><code>......
UseTCPWrappers yes
......</code></pre>



<h5>2.13.2 禁止某 IP 地址可以 SSH 本服务器</h5>



<pre class="wp-block-code"><code># vim /etc/hosts.deny</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>sshd : 192.168.0.1/32 : ALLOW</code></pre>



<p>（补充：这里以禁止 IP 地址 192.168.0.1 可以 SSH 本服务器为例）</p>



<h3>内容三：重启 SSHD</h3>



<pre class="wp-block-code"><code># systemctl restart sshd</code></pre>



<p>（补充：内容二里的参数只有重启了 SSHD 后才能生效）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 密码策略的设置 （设置密码复杂度） （openSUSE Leap 和 SUSE 修改的方法）</title>
		<link>https://eternalcenter-jun-2022.github.io/password-policy-opensuse-leap-suse/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 04 Jun 2022 11:05:33 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23693</guid>

					<description><![CDATA[步骤一：修改 /etc/pam.d/common-password-pc 配置文件 将以下内容： 修改为： 并添加以下内容： （补充：这里以1) 密码最小长度为 15 个字符 （minlen=15）2) 密码必须包含数字的个数 （dcredit=-1）3) 密码必须包含大写字母的个数 （ucredit=-1）4) 密码必须包含小写字母的个数 （lcredit=-1）5) 密码必须包含特殊字符的个数 （ocredit=-1）6) 新密码不能和前 5 个老密码重复 （maxrepeat=5）7) 只能尝试 3 次错误密码 （retry=3）8) 新密码必须要有 3 个字符和旧密码不同 （difok=3）9) 新密码不能和最近用过的 5 个密码相同 （remember=5）为例） 步骤二：修改 /etc/security/pwquality.conf 配置文件 将部分内容修改如下： （补充：这里以1) 密码最小长度为 15 个字符 （minlen = 15）2) 密码必须包含数字的个数 （dcredit = -1）3) 密码必须包含大写字母的个数 （ucredit = -1）4) 密码必须包含小写字母的个数 &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/password-policy-opensuse-leap-suse/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] Linux 密码策略的设置 （设置密码复杂度） （openSUSE Leap 和 SUSE 修改的方法）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：修改 /etc/pam.d/common-password-pc 配置文件</h3>



<pre class="wp-block-code"><code># vim /etc/pam.d/common-password-pc</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
password	requisite	pam_cracklib.so ......
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
password        requisite       pam_cracklib.so retry=3 difok=3 minlen=15 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 maxrepeat=5
......</code></pre>



<p>并添加以下内容：</p>



<pre class="wp-block-code"><code>......
password        required        pam_pwhistory.so        remember=5 </code></pre>



<p>（<br>补充：这里以<br>1) 密码最小长度为 15 个字符 （minlen=15）<br>2) 密码必须包含数字的个数 （dcredit=-1）<br>3) 密码必须包含大写字母的个数 （ucredit=-1）<br>4) 密码必须包含小写字母的个数 （lcredit=-1）<br>5) 密码必须包含特殊字符的个数 （ocredit=-1）<br>6) 新密码不能和前 5 个老密码重复 （maxrepeat=5）<br>7) 只能尝试 3 次错误密码 （retry=3）<br>8) 新密码必须要有 3 个字符和旧密码不同 （difok=3）<br>9) 新密码不能和最近用过的 5 个密码相同 （remember=5）<br>为例<br>）</p>



<h3>步骤二：修改 /etc/security/pwquality.conf 配置文件</h3>



<pre class="wp-block-code"><code># vim /etc/security/pwquality.conf</code></pre>



<p>将部分内容修改如下：</p>



<pre class="wp-block-code"><code>......
minlen = 15
......
dcredit = -1
......
ucredit = -1
......
lcredit = -1
......
ocredit = -1
......
dictcheck = 1
......
usercheck = 1
......
maxrepeat = 5
......
retry = 3
......
difok = 3
......</code></pre>



<p>（<br>补充：这里以<br>1) 密码最小长度为 15 个字符 （minlen = 15）<br>2) 密码必须包含数字的个数 （dcredit = -1）<br>3) 密码必须包含大写字母的个数 （ucredit = -1）<br>4) 密码必须包含小写字母的个数 （lcredit = -1）<br>5) 密码必须包含特殊字符的个数 （ocredit = -1）<br>6) 密码不能包含字典 （dictcheck = 1）<br>7) 密码不能包含用户 （usercheck = 1）<br>8) 新密码不能和前 5 个老密码重复 （maxrepeat=5）<br>9) 只能尝试 3 次错误密码 （retry=3）<br>10) 新密码必须要有 3 个字符和旧密码不同 （difok=3）<br>为例<br>）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 密码策略的设置 （设置密码复杂度） （CentOS 7 &#038; RHEL 7 版）</title>
		<link>https://eternalcenter-jun-2022.github.io/password-policy-centos-linux-7-rhel-7/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 04 Jun 2022 10:29:40 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23688</guid>

					<description><![CDATA[步骤一：修改 /etc/pam.d/system-auth-ac 配置文件 将以下内容： 修改为： （补充：这里以1) pam_pwquality.so 模块使用前 1 个模块从用户那里得到的密码 （try_first_pass）2) 只作用于本地用户 （local_users_only）3) 密码最小长度为 15 个字符 （minlen=15）4) 密码必须包含数字的个数 （dcredit=-1）5) 密码必须包含大写字母的个数 （ucredit=-1）6) 密码必须包含小写字母的个数 （lcredit=-1）7) 密码必须包含特殊字符的个数 （ocredit=-1）8) 新密码不能和前 5 个老密码重复 （maxrepeat=5）9) 只能尝试 3 次错误密码 （retry=3）10) 新密码必须要有 3 个字符和旧密码不同 （difok=3）11) 新密码不能和最近用过的 5 个密码相同 （remember=5）为例） 步骤二：修改 /etc/pam.d/password-auth-ac 配置文件 将以下内容： 修改为： （补充：这里以1) pam_pwquality.so 模块使用前 1 个模块从用户那里得到的密码 （try_first_pass）2) 只作用于本地用户 （local_users_only）3) 密码最小长度为 &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/password-policy-centos-linux-7-rhel-7/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] Linux 密码策略的设置 （设置密码复杂度） （CentOS 7 &#038; RHEL 7 版）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：修改 /etc/pam.d/system-auth-ac 配置文件</h3>



<pre class="wp-block-code"><code># vim /etc/pam.d/system-auth-ac</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
password    requisite     pam_pwquality.so ......
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
password    requisite     pam_pwquality.so try_first_pass local_users_only minlen=15 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 maxrepeat=5 retry=3 difok=3 remember=5
......</code></pre>



<p>（<br>补充：这里以<br>1) pam_pwquality.so 模块使用前 1 个模块从用户那里得到的密码 （try_first_pass）<br>2) 只作用于本地用户 （local_users_only）<br>3) 密码最小长度为 15 个字符 （minlen=15）<br>4) 密码必须包含数字的个数 （dcredit=-1）<br>5) 密码必须包含大写字母的个数 （ucredit=-1）<br>6) 密码必须包含小写字母的个数 （lcredit=-1）<br>7) 密码必须包含特殊字符的个数 （ocredit=-1）<br>8) 新密码不能和前 5 个老密码重复 （maxrepeat=5）<br>9) 只能尝试 3 次错误密码 （retry=3）<br>10) 新密码必须要有 3 个字符和旧密码不同 （difok=3）<br>11) 新密码不能和最近用过的 5 个密码相同 （remember=5）<br>为例<br>）</p>



<h3>步骤二：修改 /etc/pam.d/password-auth-ac 配置文件</h3>



<pre class="wp-block-code"><code># vim /etc/pam.d/password-auth-ac</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
password    requisite     pam_pwquality.so ......
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 minlen=15 dcredit=-1 ucredit=-1 lcredit=-1 ocredit=-1 maxrepeat=5 difok=3 remember=5
......</code></pre>



<p>（<br>补充：这里以<br>1) pam_pwquality.so 模块使用前 1 个模块从用户那里得到的密码 （try_first_pass）<br>2) 只作用于本地用户 （local_users_only）<br>3) 密码最小长度为 15 个字符 （minlen=15）<br>4) 密码必须包含数字的个数 （dcredit=-1）<br>5) 密码必须包含大写字母的个数 （ucredit=-1）<br>6) 密码必须包含小写字母的个数 （lcredit=-1）<br>7) 密码必须包含特殊字符的个数 （ocredit=-1）<br>8) 新密码不能和前 5 个老密码重复 （maxrepeat=5）<br>9) 只能尝试 3 次错误密码 （retry=3）<br>10) 新密码必须要有 3 个字符和旧密码不同 （difok=3）<br>11) 新密码不能和最近用过的 5 个密码相同 （remember=5）<br>为例<br>）</p>



<h3>步骤三：修改 /etc/security/pwquality.conf 配置文件</h3>



<pre class="wp-block-code"><code># vim /etc/security/pwquality.conf</code></pre>



<p>将部分内容修改如下：</p>



<pre class="wp-block-code"><code>......
minlen = 15
......
dcredit = -1
......
ucredit = -1
......
lcredit = -1
......
ocredit = -1
......
dictcheck = 1
......
usercheck = 1
......</code></pre>



<p>（<br>补充：这里以<br>1) 密码最小长度为 15 个字符 （minlen = 15）<br>2) 密码必须包含数字的个数 （dcredit = -1）<br>3) 密码必须包含大写字母的个数 （ucredit = -1）<br>4) 密码必须包含小写字母的个数 （lcredit = -1）<br>5) 密码必须包含特殊字符的个数 （ocredit = -1）<br>6) 密码不能包含字典 （dictcheck = 1）<br>7) 密码不能包含用户 （usercheck = 1）<br>为例<br>）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] 解决 Linux 运行 source ~/.bashrc 时报错 “if: Expression Syntax. then: Command not found.”</title>
		<link>https://eternalcenter-jun-2022.github.io/debug-if-expression-syntax-then-command-not-found/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 27 May 2022 06:20:24 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23635</guid>

					<description><![CDATA[报错代码 分析 此时终端没有使用 bash 解释器，而是使用了简化版 sh 解释器 解决方法]]></description>
										<content:encoded><![CDATA[
<h2>报错代码</h2>



<pre class="wp-block-code"><code>if: Expression Syntax. then: Command not found.</code></pre>



<h2>分析</h2>



<p>此时终端没有使用 bash 解释器，而是使用了简化版 sh 解释器</p>



<h2>解决方法</h2>



<pre class="wp-block-code"><code>&gt; exec bash ; source ~/.bashrc</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] 解决 Linux 运行 su 命令时正确密码输入无效</title>
		<link>https://eternalcenter-jun-2022.github.io/debug-su-password-error/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 27 May 2022 06:07:24 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23632</guid>

					<description><![CDATA[分析 当 /usr/bin/su 文件的权限设置不正确时，会出现运行 su 命令时正确密码输入无效的情况 解决方法]]></description>
										<content:encoded><![CDATA[
<h2>分析</h2>



<p>当 /usr/bin/su 文件的权限设置不正确时，会出现运行 su 命令时正确密码输入无效的情况</p>



<h2>解决方法</h2>



<pre class="wp-block-code"><code># chown root:root /usr/bin/su ; chmod 4755 /usr/bin/su</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] 解决 Linux 运行 sudo 命令时报错 “/usr/bin/sudo must be owned by uid 0 and have the setuid bit set”</title>
		<link>https://eternalcenter-jun-2022.github.io/debug-usr-bin-sudo-must-be-owned-by-uid-0-and-have-the-setuid-bit-set/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Fri, 27 May 2022 06:01:35 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23630</guid>

					<description><![CDATA[报错代码 分析 当 /usr/bin/sudo 文件的权限设置不正确时，会出现运行 sudo 命令时报错的情况 解决方法]]></description>
										<content:encoded><![CDATA[
<h2>报错代码</h2>



<pre class="wp-block-code"><code>/usr/bin/sudo must be owned by uid 0 and have the setuid bit set</code></pre>



<h2>分析</h2>



<p>当 /usr/bin/sudo 文件的权限设置不正确时，会出现运行 sudo 命令时报错的情况</p>



<h2>解决方法</h2>



<pre class="wp-block-code"><code># chown root:root /usr/bin/sudo ; chmod 4755 /usr/bin/sudo</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 进入单用户模式密码的开启 （使用 root 密码）</title>
		<link>https://eternalcenter-jun-2022.github.io/single-user-mode-password/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 14 May 2022 14:56:49 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23566</guid>

					<description><![CDATA[步骤一：开启进入单用户模式的密码 修改 /usr/lib/systemd/system/emergency.service 文件 添加以下内容： （补充：此时进入单用户模式需要输入 root 密码以后才能进入） 步骤二：显示进入单用户模式密码的开启状态 显示 /usr/lib/systemd/system/emergency.service 文件里的 /systemd-sulogin-shell 参数 （补充：此时进入单用户模式需要输入 root 密码以后才能进入）]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：开启进入单用户模式的密码</h3>



<p>修改 /usr/lib/systemd/system/emergency.service 文件</p>



<pre class="wp-block-code"><code># vim /usr/lib/systemd/system/emergency.service</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency</code></pre>



<p>（补充：此时进入单用户模式需要输入 root 密码以后才能进入）</p>



<h3>步骤二：显示进入单用户模式密码的开启状态</h3>



<p>显示 /usr/lib/systemd/system/emergency.service 文件里的 /systemd-sulogin-shell 参数</p>



<pre class="wp-block-code"><code># grep /systemd-sulogin-shell /usr/lib/systemd/system/emergency.service
ExecStart=-/usr/lib/systemd/systemd-sulogin-shell emergency</code></pre>



<p>（补充：此时进入单用户模式需要输入 root 密码以后才能进入）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 进入救援模式密码的开启 （使用 root 密码）</title>
		<link>https://eternalcenter-jun-2022.github.io/rescue-mode-password/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 14 May 2022 14:51:11 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23563</guid>

					<description><![CDATA[步骤一：开启进入救援模式的密码 修改 /usr/lib/systemd/system/rescue.service 文件 添加以下内容： （补充：此时进入救援模式需要输入 root 密码以后才能进入） 步骤二：显示进入救援模式密码的开启状态 显示 /usr/lib/systemd/system/rescue.service 文件里的 /systemd-sulogin-shell 参数 （补充：此时进入救援模式需要输入 root 密码以后才能进入）]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：开启进入救援模式的密码</h3>



<p>修改 /usr/lib/systemd/system/rescue.service 文件</p>



<pre class="wp-block-code"><code># vim /usr/lib/systemd/system/rescue.service</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue</code></pre>



<p>（补充：此时进入救援模式需要输入 root 密码以后才能进入）</p>



<h3>步骤二：显示进入救援模式密码的开启状态</h3>



<p>显示 /usr/lib/systemd/system/rescue.service 文件里的 /systemd-sulogin-shell 参数</p>



<pre class="wp-block-code"><code># grep /systemd-sulogin-shell /usr/lib/systemd/system/rescue.service
ExecStart=-/usr/lib/systemd/systemd-sulogin-shell rescue</code></pre>



<p>（补充：此时进入救援模式需要输入 root 密码以后才能进入）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 软硬链接保护的开启 （防止通过软硬链接执行无权限执行的文件）</title>
		<link>https://eternalcenter-jun-2022.github.io/opening-of-soft-and-hard-link-protection/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 14 May 2022 14:41:31 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System File (系统文件)]]></category>
		<category><![CDATA[System File Security (系统文件安全)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<category><![CDATA[System Storage & System Directory & System File (系统存储 & 系统目录 & 系统文件)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23561</guid>

					<description><![CDATA[步骤一：开启软硬链接保护 1.1 修改 /etc/sysctl.conf 文件 添加以下内容： 1.2 设置系统正在运行的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数 步骤二：显示软硬链接保护的开启状态 2.1 显示 /etc/sysctl.conf 文件里的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数 2.2 显示系统正在运行的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：开启软硬链接保护</h3>



<h4>1.1 修改 /etc/sysctl.conf 文件</h4>



<pre class="wp-block-code"><code># vim /etc/sysctl.conf</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
fs.protected_hardlinks = 1
fs.protected_symlinks = 1</code></pre>



<h4>1.2 设置系统正在运行的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数</h4>



<pre class="wp-block-code"><code># sysctl -w fs.protected_symlinks = 1
# sysctl -w fs.protected_hardlinks = 1</code></pre>



<h3>步骤二：显示软硬链接保护的开启状态</h3>



<h4>2.1 显示 /etc/sysctl.conf 文件里的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数</h4>



<pre class="wp-block-code"><code># grep "fs\.protected_hardlinks" /etc/sysctl.conf /etc/sysctl.d/*
fs.protected_hardlinks = 1</code></pre>



<pre class="wp-block-code"><code># grep "fs\.protected_symlinks" /etc/sysctl.conf /etc/sysctl.d/*
fs.protected_symlinks = 1</code></pre>



<h4>2.2 显示系统正在运行的 fs.protected_symlinks 参数和 fs.protected_hardlinks 参数</h4>



<pre class="wp-block-code"><code># sysctl fs.protected_symlinks
fs.protected_symlinks = 1
# sysctl fs.protected_hardlinks
fs.protected_hardlinks = 1</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] Linux 内存地址空间布局随机化的开启 （增加写入内存页漏洞的难度）</title>
		<link>https://eternalcenter-jun-2022.github.io/randomization-of-memory-address-space-layout/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 14 May 2022 14:34:15 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23559</guid>

					<description><![CDATA[步骤一：开启内存地址空间布局随机化 1.1 修改 /etc/sysctl.conf 文件 添加以下内容： （补充：当 kernel.randomize_va_space 的参数是 2 时则内存地址空间布局随机化已经开启） 1.2 设置系统正在运行的 kernel.randomize_va_space 参数 （补充：当 kernel.randomize_va_space 的参数是 2 时则内存地址空间布局随机化已经开启） 步骤二：显示内存地址空间布局随机化的开启状态 2.1 显示 /etc/sysctl.conf 文件里的 kernel.randomize_va_space 参数 （补充：当 kernel.randomize_va_space 的参数是 2 时则内存地址空间布局随机化已经开启） 2.2 显示系统正在运行的 kernel.randomize_va_space 参数 （补充：当 kernel.randomize_va_space 的参数是 2 时则内存地址空间布局随机化已经开启）]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：开启内存地址空间布局随机化</h3>



<h4>1.1 修改 /etc/sysctl.conf 文件</h4>



<pre class="wp-block-code"><code># vim /etc/sysctl.conf</code></pre>



<p>添加以下内容：</p>



<pre class="wp-block-code"><code>......
kernel.randomize_va_space = 2</code></pre>



<p>（补充：当 kernel.randomize_va_space 的参数是 2 时则内存地址空间布局随机化已经开启）</p>



<h4>1.2 设置系统正在运行的 kernel.randomize_va_space 参数</h4>



<pre class="wp-block-code"><code># sysctl -w kernel.randomize_va_space=2</code></pre>



<p>（补充：当 kernel.randomize_va_space 的参数是 2 时则内存地址空间布局随机化已经开启）</p>



<h3>步骤二：显示内存地址空间布局随机化的开启状态</h3>



<h4>2.1 显示 /etc/sysctl.conf 文件里的 kernel.randomize_va_space 参数</h4>



<pre class="wp-block-code"><code># grep "kernel\.randomize_va_space" /etc/sysctl.conf /etc/sysctl.d/*
kernel.randomize_va_space = 2</code></pre>



<p>（补充：当 kernel.randomize_va_space 的参数是 2 时则内存地址空间布局随机化已经开启）</p>



<h4>2.2 显示系统正在运行的 kernel.randomize_va_space 参数</h4>



<pre class="wp-block-code"><code># sysctl kernel.randomize_va_space
kernel.randomize_va_space = 2</code></pre>



<p>（补充：当 kernel.randomize_va_space 的参数是 2 时则内存地址空间布局随机化已经开启）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[内容] Rocky Linux 8 &#038; RHEL 8 Web console 的管理</title>
		<link>https://eternalcenter-jun-2022.github.io/web-console/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 14 May 2022 13:42:04 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23545</guid>

					<description><![CDATA[内容一：开启 Web console （注意：此时通过 SSH 登陆服务器时或者 console 的登陆界面上会显示： ） 内容二：关闭 Web console]]></description>
										<content:encoded><![CDATA[
<h3>内容一：开启 Web console</h3>



<pre class="wp-block-code"><code># systemctl enable --now cockpit.socket</code></pre>



<p>（<br>注意：此时通过 SSH 登陆服务器时或者 console 的登陆界面上会显示：</p>



<pre class="wp-block-code"><code>Web console: https://&lt;host&gt;:9090/ or https://&lt;IP/ address&gt;:9090/</code></pre>



<p>）</p>



<h3>内容二：关闭 Web console</h3>



<pre class="wp-block-code"><code># systemctl stop cockpit.socket
# systemctl disable cockpit.socket</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[排错] 解决 Linux SSH “PasswordAuthentication no” 参数不起作用</title>
		<link>https://eternalcenter-jun-2022.github.io/debug-passwordauthentication-no-no-working/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 14 May 2022 10:00:13 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<category><![CDATA[System Setting (系统设置)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23510</guid>

					<description><![CDATA[分析 如果以前成功密码 SSH 登录过目标服务器，那启用 SSH 的 ChallengeResponseAuthentication 参数可能会影响 PasswordAuthentication 参数的效果 解决方法 将其中的： 修改为：]]></description>
										<content:encoded><![CDATA[
<h2>分析</h2>



<p>如果以前成功密码 SSH 登录过目标服务器，那启用 SSH 的 ChallengeResponseAuthentication 参数可能会影响 PasswordAuthentication 参数的效果</p>



<h2>解决方法</h2>



<pre class="wp-block-code"><code># vim /etc/ssh/sshd_conf</code></pre>



<p>将其中的：</p>



<pre class="wp-block-code"><code>......
# ChallengeResponseAuthentication yes
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
ChallengeResponseAuthentication no
......</code></pre>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
