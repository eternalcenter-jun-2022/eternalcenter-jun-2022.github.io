<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>SFTP &#8211; Eternal Center</title>
	<atom:link href="https://eternalcenter-jun-2022.github.io/category/services/storage-services/sftp/feed/" rel="self" type="application/rss+xml" />
	<link>https://eternalcenter-jun-2022.github.io/</link>
	<description></description>
	<lastBuildDate>Sun, 19 Jun 2022 13:07:29 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	
	<item>
		<title>[步骤] SFTP 安全 （限制 SSH 登录、锁定目录范围和端口分离版）</title>
		<link>https://eternalcenter-jun-2022.github.io/sftp-safe-restrict-ssh-login-lock-directory-range-and-port-separation/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Mon, 23 May 2022 12:35:18 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[Services (服务)]]></category>
		<category><![CDATA[SFTP]]></category>
		<category><![CDATA[Storage Services (存储服务)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23578</guid>

					<description><![CDATA[步骤一：创建 SFTP 用户的组 步骤二：创建用于 SFTP 的主目录 2.1 创建用于 SFTP 的主目录 （补充：这里以创建 /sftp 目录为例） 2.2 设置用于 SFTP 的主目录的所属组和所属主 （补充：这里以给 /sftp 设置 root 主和 sftp 组为例） 2.3 设置用于 SFTP 的主目录的权限 （补充：这里以给 /sftp 目录权限为例） 步骤三：让 SSH 的配置文件和 SFTP 的配置文件分离 3.1 创建新的 SFTP 配置文件 3.2 让 SSH 的配置文件和 SFTP 的配置文件分离 3.2.1 从 SSH 的配置文件里去除关于 SFTP 的设置 如果是 CentOS Linux &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/sftp-safe-restrict-ssh-login-lock-directory-range-and-port-separation/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] SFTP 安全 （限制 SSH 登录、锁定目录范围和端口分离版）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3>步骤一：创建 SFTP 用户的组</h3>



<pre class="wp-block-code"><code># groupadd sftp</code></pre>



<h3>步骤二：创建用于 SFTP 的主目录</h3>



<h4>2.1 创建用于 SFTP 的主目录</h4>



<pre class="wp-block-code"><code># mkdir /sftp</code></pre>



<p>（补充：这里以创建 /sftp 目录为例）</p>



<h4>2.2 设置用于 SFTP 的主目录的所属组和所属主</h4>



<pre class="wp-block-code"><code># chown root:sftp /sftp</code></pre>



<p>（补充：这里以给 /sftp 设置 root 主和 sftp 组为例）</p>



<h4>2.3 设置用于 SFTP 的主目录的权限</h4>



<pre class="wp-block-code"><code># chmod 755 /sftp</code></pre>



<p>（补充：这里以给 /sftp 目录权限为例）</p>



<h3>步骤三：让 SSH 的配置文件和 SFTP 的配置文件分离</h3>



<h4>3.1 创建新的 SFTP 配置文件</h4>



<pre class="wp-block-code"><code># cp /etc/ssh/sshd_config /etc/ssh/sshdsftp_config</code></pre>



<h4>3.2 让 SSH 的配置文件和 SFTP 的配置文件分离</h4>



<h5>3.2.1 从 SSH 的配置文件里去除关于 SFTP 的设置</h5>



<pre class="wp-block-code"><code># vim /etc/ssh/sshd_config</code></pre>



<p>如果是 CentOS Linux &amp; RHEL，将以下内容：</p>



<pre class="wp-block-code"><code>......
Subsystem  sftp    /usr/libexec/openssh/sftp-server
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
#Subsystem  sftp    /usr/libexec/openssh/sftp-server
......</code></pre>



<p>如果是 openSUSE &amp; SLE， 将以下内容：</p>



<pre class="wp-block-code"><code>......
Subsystem       sftp    /usr/lib/ssh/sftp-server
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
# Subsystem       sftp    /usr/lib/ssh/sftp-server
......</code></pre>



<h5>3.2.2 从 SFTP 的配置文件里去除关于 SSH 的设置并添加关于 SFTP 的设置</h5>



<pre class="wp-block-code"><code># vim /etc/ssh/sshdsftp_config</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
#Port 22
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
Port 2222
......</code></pre>



<p>并添加以下内容：</p>



<pre class="wp-block-code"><code>......
Subsystem       sftp    internal-sftp
Match LocalPort 2222
ChrootDirectory /sftp/%u
ForceCommand    internal-sftp
AllowTcpForwarding no
X11Forwarding no</code></pre>



<p>（补充：这里以将 sftp 的端口设置为 2222 为例）</p>



<h3>步骤四：让创建新的 SFTP 配置文件被 systemctl 管理</h3>



<h4>4.1 创建管理 SFTP 配置文件的 systemctl 管理文件</h4>



<pre class="wp-block-code"><code># cp /usr/lib/systemd/system/sshd.service /etc/systemd/system/sshdsftp.service</code></pre>



<h4>4.2 修改管理 SFTP 配置文件的 systemctl 管理文件</h4>



<pre class="wp-block-code"><code># vim /etc/systemd/system/sshdsftp.service</code></pre>



<p>将以下内容：</p>



<pre class="wp-block-code"><code>......
Description=OpenSSH server daemon
......
ExecStart=/usr/sbin/sshd -D $OPTIONS $CRYPTO_POLICY
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
Description=OpenSSH SFTP server daemon
......
ExecStart=/usr/sbin/sshd -D -f /etc/ssh/sshdsftp_config $OPTIONS $CRYPTO_POLICY
......</code></pre>



<h4>4.2 管理 SFTP 配置文件的 systemctl 管理文件</h4>



<pre class="wp-block-code"><code># systemctl daemon-reload</code></pre>



<h3>步骤五：对 SFTP 使用新端口</h3>



<h4>5.1 在防火墙上允许被 SFTP 使用的端口可以被访问</h4>



<h5>5.1.1 在防火墙上允许被 SFTP 使用的端口可以被访问</h5>



<pre class="wp-block-code"><code># firewall-cmd --add-port=2222/tcp --perm</code></pre>



<p>（补充：这里以在防火墙上开通 2222 端口为例）</p>



<h5>5.1.2 让新的防火墙策略立刻生效</h5>



<pre class="wp-block-code"><code># firewall-cmd --reload</code></pre>



<h4>5.2 在 SELinux 上给 SFTP 使用的端口打上 SSHD 的标签</h4>



<pre class="wp-block-code"><code># semanage port -a -t ssh_port_t -p tcp 2222</code></pre>



<p>（补充：这里以给 2222 端口打上 SSH 的标签为例）</p>



<p>（注意：此步骤只有在 SELinux 开启，且处于 enforcing 状态时才需要设置）</p>



<h3>步骤六：重启 SSHD，开启 SFTP 并将 SFTP 设置为开机自启</h3>



<h4>6.1 重启 SSHD</h4>



<pre class="wp-block-code"><code># systemctl restart sshd</code></pre>



<h4>6.2 开启 SFTP 并将 SFTP 设置为开机自启</h4>



<pre class="wp-block-code"><code># systemctl enable --now sshdsftp</code></pre>



<h3>步骤七：创建 SFTP 用户</h3>



<h4>7.1 创建 SFTP 用户</h4>



<h5>7.1.1 创建 SFTP 用户</h5>



<pre class="wp-block-code"><code># useradd -g sftp -s /bin/false sftpuser</code></pre>



<p>（补充：这里以创建名为 sftpuser，所属组为 sftp，解释器是 /bin/false 的用户为例）</p>



<h5>7.1.2 给 SFTP 用户设置密码</h5>



<pre class="wp-block-code"><code># passwd sftpuser</code></pre>



<p>（补充：这里以给 sftpuser 用户设置密码为例）</p>



<h4>7.2 创建 SFTP 用户的主目录</h4>



<h5>7.2.1 创建 SFTP 用户的主目录</h5>



<pre class="wp-block-code"><code># mkdir /sftp/sftpuser</code></pre>



<p>（补充：这里以创建 /sftp/sftpuser 目录为例）</p>



<h5>7.2.2 设置 SFTP 用户的主目录的所属组和所属主</h5>



<pre class="wp-block-code"><code># chown root:sftp /sftp/sftpuser</code></pre>



<p>（补充：这里以给 /sftp/sftpuser 设置 root 主和 sftp 组为例）</p>



<h5>7.2.3 设置 SFTP 用户的主目录的权限</h5>



<pre class="wp-block-code"><code># chmod 755 /sftp/sftpuser</code></pre>



<p>（补充：这里以给 /sftp/sftpuser 目录权限为例）</p>



<h4>7.3 创建 SFTP 用户有写入权限的目录</h4>



<h5>7.3.1 创建 SFTP 用户有写入权限的目录</h5>



<pre class="wp-block-code"><code># mkdir /sftp/sftpuser/write</code></pre>



<p>（补充：这里以创建 /sftp/sftpuser/write 目录为例）</p>



<h5>7.3.2 设置 SFTP 用户有写入权限的目录的所属组和所属主</h5>



<pre class="wp-block-code"><code># chown sftpuser:sftp /sftp/sftpuser/write</code></pre>



<p>（补充：这里以给 /sftp/sftpuser/write 设置 sftpuser 主和 sftp 组为例）</p>



<h5>7.3.3 创建 SFTP 用户有写入权限的目录的权限</h5>



<pre class="wp-block-code"><code># chmod 755 /sftp/sftpuser/write</code></pre>



<p>（补充：这里以给 /sftp/sftpuser/write 目录权限为例）</p>



<h3>步骤八：测试 SFTP</h3>



<h4>8.1 创建测试用户</h4>



<h5>8.1.1 创建测试用户</h5>



<pre class="wp-block-code"><code># useradd nosftpuser</code></pre>



<p>（补充：这里以创建测试用户 nosftpuser 为例）</p>



<h5>8.1.2 给测试用户设置密码</h5>



<pre class="wp-block-code"><code># passwd nosftpuser</code></pre>



<h4>8.2 测试 SFTP 用户无法 SSH</h4>



<pre class="wp-block-code"><code># ssh sftpuser@127.0.0.1</code></pre>



<p>（补充：这里以测试用户是 sftpuser 为例）</p>



<h4>8.3 测试 SFTP 目录范围</h4>



<h5>8.3.1 登陆 SFTP</h5>



<pre class="wp-block-code"><code># sftp -P 2222 sftpuser@127.0.0.1
Connected to sftpuser@127.0.0.1.
sftp&gt;</code></pre>



<p>（补充：这里以 SFTP 端口是 2222，SFTP 目录时 /sftp ，测试用户是 sftpuser 为例）</p>



<h5>8.3.2 确认 SFTP 根目录</h5>



<h5>8.3.2.1 切换到 SFTP 的根目录</h5>



<pre class="wp-block-code"><code>sftp&gt; cd /</code></pre>



<h5>8.3.2.2 显示 SFTP 根目录下的文件或目录</h5>



<pre class="wp-block-code"><code>sftp&gt; ls
write  
sftp&gt;</code></pre>



<p>（补充：此时发现目前 SFTP 的根并不是 Linux 系统的根目录）</p>



<h4>8.4 测试 SSH 和 SFTP 分离</h4>



<h5>8.4.1 SSH 测试</h5>



<h5>8.4.1.1 SSH 端口可以正常 SSH</h5>



<pre class="wp-block-code"><code># ssh nosftpuser@127.0.0.1</code></pre>



<p>（补充：这里以 SSH 端口是 22，测试用户是 nosftpuser 为例）</p>



<h5>8.4.1.2 SFTP 端口不可以被 SSH</h5>



<h5>8.4.1.2.1 家目录在 SFTP 目录的用户通过 SFTP 端口 SSH</h5>



<pre class="wp-block-code"><code># ssh -p 2222 sftpuser@127.0.0.1
nosftpuser@192.168.8.58's password: 
This service allows sftp connections only.
Connection to 10.0.0.3 closed.
#</code></pre>



<p>（补充：这里以 SFTP 端口是 2222，SFTP 目录是 /sftp，测试用户是 sftpuser 为例）</p>



<h5>8.4.1.2.2 家目录不在 SFTP 目录的用户通过 SFTP 端口 SSH</h5>



<pre class="wp-block-code"><code># ssh -p 2222 nosftpuser@127.0.0.1
client_loop: send disconnect: Broken pipe
#</code></pre>



<p>（补充：这里以 SFTP 端口是 2222，SFTP 目录是 /sftp，测试用户是 nosftpuser 为例）</p>



<h5>8.4.2 SFTP 测试</h5>



<h5>8.4.2.1 SSH 端口不可以 SFTP</h5>



<pre class="wp-block-code"><code># sftp sftpuser@127.0.0.1
subsystem request failed on channel 0
Connection closed
#</code></pre>



<p>（补充：这里以 SFTP 端口是 22，测试用户是 sftpuser 为例）</p>



<h5>8.4.2.2 家目录不在 SFTP 下的用户不可以 SFTP</h5>



<pre class="wp-block-code"><code># sftp -P 2222 nosftpuser@127.0.0.1
client_loop: send disconnect: Broken pipe
Connection closed
#</code></pre>



<p>（补充：这里以 SFTP 端口是 2222，SFTP 目录时 /sftp，测试用户是 nosftpuser 为例）</p>



<h5>8.4.2.3 家目录在 SFTP 下的用户可以通过 SFTP 端口 SFTP</h5>



<pre class="wp-block-code"><code># sftp -P 2222 sftpuser@127.0.0.1
Connected to sftpuser@127.0.0.1.
sftp&gt;</code></pre>



<p>（补充：这里以 SFTP 端口是 2222，SFTP 目录时 /sftp ，测试用户是 nosftpuser 为例）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[工具] Shell 测试 SFTP 服务</title>
		<link>https://eternalcenter-jun-2022.github.io/shell-sftp-test/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Sat, 14 May 2022 14:11:28 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[Languages (语言)]]></category>
		<category><![CDATA[Services (服务)]]></category>
		<category><![CDATA[SFTP]]></category>
		<category><![CDATA[Shell]]></category>
		<category><![CDATA[Shell Monitor (监控)]]></category>
		<category><![CDATA[Shell Tool (工具)]]></category>
		<category><![CDATA[Storage Services (存储服务)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System Login Security (系统登录安全)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<category><![CDATA[System Operation (系统操作)]]></category>
		<category><![CDATA[System Operation & System Setting & System Software (系统操作 & 系统设置 & 系统软件)]]></category>
		<category><![CDATA[System Security (系统安全)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=23553</guid>

					<description><![CDATA[介绍 作者：朱明宇名称：测试 SFTP 服务作用：测试 SFTP 服务 使用方法： 1. 在此脚本的分割线内写入相应的内容2. 给此脚本添加执行权限3. 执行此脚本 脚本分割线里的变量：IP=10.0.0.8 #要测试 SFTP 的服务器 IP 地址 注意：此脚本执行前必须要先保证执行脚本的主机能无秘钥远程需要测试 SFTP 服务的服务器 脚本]]></description>
										<content:encoded><![CDATA[
<h2>介绍</h2>



<p>作者：朱明宇<br>名称：测试 SFTP 服务<br>作用：测试 SFTP 服务</p>



<p>使用方法：</p>



<p>1. 在此脚本的分割线内写入相应的内容<br>2. 给此脚本添加执行权限<br>3. 执行此脚本</p>



<p>脚本分割线里的变量：<br>IP=10.0.0.8 #要测试 SFTP 的服务器 IP 地址 </p>



<p>注意：此脚本执行前必须要先保证执行脚本的主机能无秘钥远程需要测试 SFTP 服务的服务器</p>



<h2>脚本</h2>



<pre class="wp-block-code"><code>#!/bin/bash

####################### Separator ########################
IP=10.0.0.8
####################### Separator ########################

set timeout 3

rpm -q expect &amp;&gt; /dev/null
if &#91; $? -ne 0 ];then
        echo "Expect needs to be installed first"
fi

expect &lt;&lt; EOF
spawn sftp $IP
expect "sftp&gt;"                                   {send "cd /tmp\r" } 
expect "sftp&gt;"                                   {send "ls -l\r"}
expect "sftp&gt;"                                   {send "quit\r"}
expect "&gt;"                                       {send "\r"}
EOF</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[工具] Shell 监控普通登录记录 （排除 SFTP 登录记录只监控普通登录记录）</title>
		<link>https://eternalcenter-jun-2022.github.io/shell-login-log-exclude-sftp/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Tue, 15 Feb 2022 14:52:50 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[Languages (语言)]]></category>
		<category><![CDATA[Other Services (其他服务)]]></category>
		<category><![CDATA[Services (服务)]]></category>
		<category><![CDATA[SFTP]]></category>
		<category><![CDATA[Shell]]></category>
		<category><![CDATA[Shell Monitor (监控)]]></category>
		<category><![CDATA[Shell Tool (工具)]]></category>
		<category><![CDATA[Storage Services (存储服务)]]></category>
		<category><![CDATA[System (系统)]]></category>
		<category><![CDATA[System General Log (系统普通日志)]]></category>
		<category><![CDATA[System Log (系统日志)]]></category>
		<category><![CDATA[System Network & System Security & System Log (系统网络 & 系统安全 & 系统日志)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=21977</guid>

					<description><![CDATA[注意： 在排除 SFTP 登录记录只监控普通登录记录前要先开启 SFTP 日志： 正文： 介绍 作者：朱明宇名称：监控普通登录记录 （排除 SFTP 登录记录只监控普通登录记录）作用：监控普通登录记录 （排除 SFTP 登录记录只监控普通登录记录） 使用方法：1. 在此脚本的分割线内写入相应的内容2. 给此脚本添加执行权限3. 执行此脚本4. 普通登录记录会同时记录在系统日志和 $logfile 里 脚本分割线里的变量：1. logfile=logfile.txt #用户保存记录的文件2. prompt=&#8221;and no sftp info&#8221; #记录里普通登录记录的文件 脚本]]></description>
										<content:encoded><![CDATA[
<h1 id="注意">注意：</h1>



<p>在排除 SFTP 登录记录只监控普通登录记录前要先开启 SFTP 日志：</p>



<div class="wp-container-1 wp-block-buttons">
<div class="wp-block-button aligncenter is-style-outline"><a class="wp-block-button__link" href="https://eternalcenter-jun-2022.github.io/sftp-log/" style="border-radius:0px">SFTP 日志的开启</a></div>
</div>



<h1>正文：</h1>



<h2 id="介绍">介绍</h2>



<p>作者：朱明宇<br>名称：监控普通登录记录 （排除 SFTP 登录记录只监控普通登录记录）<br>作用：监控普通登录记录 （排除 SFTP 登录记录只监控普通登录记录）</p>



<p>使用方法：<br>1. 在此脚本的分割线内写入相应的内容<br>2. 给此脚本添加执行权限<br>3. 执行此脚本<br>4. 普通登录记录会同时记录在系统日志和 $logfile 里</p>



<p>脚本分割线里的变量：<br>1. logfile=logfile.txt #用户保存记录的文件<br>2. prompt=&#8221;and no sftp info&#8221; #记录里普通登录记录的文件</p>



<h2 id="脚本">脚本</h2>



<pre class="wp-block-code"><code>#!/bin/bash

####################### Separator ########################

logfile=logfile.txt
prompt="and no sftp info"

####################### Separator ########################

checktime=`date +%Y-%m-%dT%H -d "-1 day"`

for i in `cat -n /var/log/messages | grep $check_time | grep 'Started Session' | grep -v 'root' | awk '{print $1}'`

do
   line=`sed -n $&#91;i]p /var/log/messages`
   time=`echo $line | awk '{print $1}'`
   session=`echo $line | awk '{print $6}'`
   user=`echo $line | awk '{print $9}'`
   user=${user%.}

   message="ACCESS CHECK LOG: Time:$time Session:$session $user has accessed `hostname`, $prompt"

   let sftpline=i+3

   sed -n $&#91;sftpline]p /var/log/messages | grep sftp-server &amp;&gt; /dev/null
   if &#91; $? -ne 0 ];then
           echo $message
           echo $message &gt;&gt; $logfile.txt
           logger $message
   fi
   echo
done</code></pre>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] SFTP 日志的开启</title>
		<link>https://eternalcenter-jun-2022.github.io/sftp-log/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Wed, 26 Jan 2022 14:34:34 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[Services (服务)]]></category>
		<category><![CDATA[SFTP]]></category>
		<category><![CDATA[Storage Services (存储服务)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=21410</guid>

					<description><![CDATA[如果是 CentOS Linux &#38; RHEL，将以下内容： 修改为： 如果是 openSUSE &#38; SLE， 将以下内容： 修改为： （补充：此时当通过 SFTP 登录系统时，系统日志记录文件 /var/log/messages 里登录记录后面会紧跟一行带 sftp-server 的记录）]]></description>
										<content:encoded><![CDATA[
<pre class="wp-block-code"><code># vim /etc/sshd/sshd_config</code></pre>



<p>如果是 CentOS Linux &amp; RHEL，将以下内容：</p>



<pre class="wp-block-code"><code>......
Subsystem       sftp    /usr/libexec/openssh/sftp-server
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
Subsystem       sftp    /usr/libexec/openssh/sftp-server -l INFO
......</code></pre>



<p>如果是 openSUSE &amp; SLE， 将以下内容：</p>



<pre class="wp-block-code"><code>......
Subsystem       sftp    /usr/lib/ssh/sftp-server
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
Subsystem       sftp    /usr/lib/ssh/sftp-server -l INFO
......</code></pre>



<p>（补充：此时当通过 SFTP 登录系统时，系统日志记录文件 /var/log/messages 里登录记录后面会紧跟一行带 sftp-server 的记录）</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>[步骤] SFTP 安全 （限制 SSH 登录和限制目录范围版）</title>
		<link>https://eternalcenter-jun-2022.github.io/sftp-safe-restrict-ssh-login-and-lock-directory-range/</link>
		
		<dc:creator><![CDATA[Mingyu Zhu]]></dc:creator>
		<pubDate>Thu, 16 Jul 2020 12:16:20 +0000</pubDate>
				<category><![CDATA[Chinese (中文)]]></category>
		<category><![CDATA[Services (服务)]]></category>
		<category><![CDATA[SFTP]]></category>
		<category><![CDATA[Storage Services (存储服务)]]></category>
		<guid isPermaLink="false">https://eternalcenter-jun-2022.github.io/?p=10068</guid>

					<description><![CDATA[步骤一：创建 SFTP 用户的组 步骤二：创建用于 SFTP 的主目录 2.1 创建用于 SFTP 的主目录 （补充：这里以创建 /sftp 目录为例） 2.2 设置用于 SFTP 的主目录的所属组和所属主 （补充：这里以给 /sftp 设置 root 主和 sftp 组为例） 2.3 设置用于 SFTP 的主目录的权限 （补充：这里以给 /sftp 目录权限为例） 步骤三：开启 SFTP 服务 3.1 修改 sshd 配置文件 如果是 RHEL &#38; CentOS Linux，将以下内容： 修改为： 如果是 openSUSE &#38; SLE， 将以下内容： 修改为： 并添加以下内容： （补充：这里以（1）sftp 的所属组是 sftp（2）以 /sftp/%u &#8230; <p class="link-more"><a href="https://eternalcenter-jun-2022.github.io/sftp-safe-restrict-ssh-login-and-lock-directory-range/" class="more-link">Continue reading<span class="screen-reader-text"> "[步骤] SFTP 安全 （限制 SSH 登录和限制目录范围版）"</span></a></p>]]></description>
										<content:encoded><![CDATA[
<h3 id="步骤一-创建-sftp-用户的组">步骤一：创建 SFTP 用户的组</h3>



<pre class="wp-block-code"><code># groupadd sftp</code></pre>



<h3 id="步骤二-创建用于-sftp-的主目录2-1-创建用于-sftp-的主目录">步骤二：创建用于 SFTP 的主目录</h3>



<h4 id="步骤二-创建用于-sftp-的主目录2-1-创建用于-sftp-的主目录">2.1 创建用于 SFTP 的主目录</h4>



<pre class="wp-block-code"><code># mkdir /sftp</code></pre>



<p>（补充：这里以创建 /sftp 目录为例）</p>



<h4 id="2-2-设置用于-sftp-的主目录的所属组和所属主">2.2 设置用于 SFTP 的主目录的所属组和所属主</h4>



<pre class="wp-block-code"><code># chown root:sftp /sftp</code></pre>



<p>（补充：这里以给 /sftp 设置 root 主和 sftp 组为例）</p>



<h4 id="2-3-设置用于-sftp-的主目录的权限">2.3 设置用于 SFTP 的主目录的权限</h4>



<pre class="wp-block-code"><code># chmod 755 /sftp</code></pre>



<p>（补充：这里以给 /sftp 目录权限为例）</p>



<h3 id="步骤三-开启-sftp-服务3-1-修改-sshd-配置文件">步骤三：开启 SFTP 服务</h3>



<h4 id="步骤三-开启-sftp-服务3-1-修改-sshd-配置文件">3.1 修改 sshd 配置文件</h4>



<pre class="wp-block-code"><code># vim /etc/ssh/sshd_config</code></pre>



<p>如果是 RHEL &amp; CentOS Linux，将以下内容：</p>



<pre class="wp-block-code"><code>......
Subsystem       sftp    /usr/libexec/openssh/sftp-server
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
# Subsystem       sftp    /usr/libexec/openssh/sftp-server
......</code></pre>



<p>如果是 openSUSE &amp; SLE， 将以下内容： </p>



<pre class="wp-block-code"><code>......
Subsystem       sftp    /usr/lib/ssh/sftp-server
......</code></pre>



<p>修改为：</p>



<pre class="wp-block-code"><code>......
# Subsystem       sftp    /usr/lib/ssh/sftp-server
......</code></pre>



<p>并添加以下内容：</p>



<pre class="wp-block-code"><code>......
Subsystem       sftp    internal-sftp
Match Group sftp
ChrootDirectory /sftp/%u
ForceCommand    internal-sftp
AllowTcpForwarding no
X11Forwarding no</code></pre>



<p>（<br>补充：这里以<br>（1）sftp 的所属组是 sftp<br>（2）以 /sftp/%u 作为 sftp 的家目录<br>为例<br>）</p>



<h4 id="3-2-重启-sshd-服务">3.2 重启 sshd 服务</h4>



<pre class="wp-block-code"><code># systemctl restart sshd</code></pre>



<h3 id="步骤四-创建-sftp-用户4-1-创建-sftp-用户4-1-1-创建-sftp-用户">步骤四：创建 SFTP 用户</h3>



<h4 id="步骤四-创建-sftp-用户4-1-创建-sftp-用户4-1-1-创建-sftp-用户">4.1 创建 SFTP 用户</h4>



<h5 id="步骤四-创建-sftp-用户4-1-创建-sftp-用户4-1-1-创建-sftp-用户">4.1.1 创建 SFTP 用户</h5>



<pre class="wp-block-code"><code># useradd -g sftp -s /bin/false sftpuser</code></pre>



<p>（补充：这里以创建名为 sftpuser ，所属组为 sftp，解释器是 /bin/false 的用户为例）</p>



<h5 id="4-1-2-给-sftp-用户设置密码">4.1.2 给 SFTP 用户设置密码</h5>



<pre class="wp-block-code"><code># passwd sftpuser</code></pre>



<p>（补充：这里以给 sftpuser 用户设置密码为例）</p>



<h4 id="4-2-创建-sftp-用户的主目录4-2-1-创建-sftp-用户的主目录">4.2 创建 SFTP 用户的主目录</h4>



<h5 id="4-2-创建-sftp-用户的主目录4-2-1-创建-sftp-用户的主目录">4.2.1 创建 SFTP 用户的主目录</h5>



<pre class="wp-block-code"><code># mkdir /sftp/sftpuser</code></pre>



<p>（补充：这里以创建 /sftp/sftpuser 目录为例）</p>



<h5 id="4-2-2-设置-sftp-用户的主目录的所属组和所属主">4.2.2 设置 SFTP 用户的主目录的所属组和所属主</h5>



<pre class="wp-block-code"><code># chown root:sftp /sftp/sftpuser</code></pre>



<p>（补充：这里以给 /sftp/sftpuser 设置 root 主和 sftp 组为例）</p>



<h5 id="4-2-3-设置-sftp-用户的主目录的权限">4.2.3 设置 SFTP 用户的主目录的权限</h5>



<pre class="wp-block-code"><code># chmod 755 /sftp/sftpuser</code></pre>



<p>（补充：这里以给 /sftp/sftpuser 目录权限为例）</p>



<h4 id="4-3-创建-sftp-用户有写入权限的目录4-3-1-创建-sftp-用户有写入权限的目录">4.3 创建 SFTP 用户有写入权限的目录</h4>



<h5 id="4-3-创建-sftp-用户有写入权限的目录4-3-1-创建-sftp-用户有写入权限的目录">4.3.1 创建 SFTP 用户有写入权限的目录</h5>



<pre class="wp-block-code"><code># mkdir /sftp/sftpuser/write</code></pre>



<p>（补充：这里以创建 /sftp/sftpuser/write 目录为例）</p>



<h5 id="4-3-2-设置-sftp-用户有写入权限的目录的所属组和所属主">4.3.2 设置 SFTP 用户有写入权限的目录的所属组和所属主</h5>



<pre class="wp-block-code"><code># chown sftpuser:sftp /sftp/sftpuser/write</code></pre>



<p>（补充：这里以给 /sftp/sftpuser/write 设置 sftpuser 主和 sftp 组为例）</p>



<h5 id="4-3-3-创建-sftp-用户有写入权限的目录的权限">4.3.3 创建 SFTP 用户有写入权限的目录的权限</h5>



<pre class="wp-block-code"><code># chmod 755 /sftp/sftpuser/write</code></pre>



<p>（补充：这里以给 /sftp/sftpuser/write 目录权限为例）</p>



<h3>步骤五：测试 SFTP</h3>



<h4>5.1 测试 SFTP 用户无法 SSH</h4>



<pre class="wp-block-code"><code># ssh sftpuser@127.0.0.1</code></pre>



<p>（补充：这里以测试用户是 sftpuser 为例）</p>



<h4>5.2 限制 SFTP 目录范围的测试</h4>



<h5>5.2.1 登陆 SFTP</h5>



<pre class="wp-block-code"><code># sftp -P sftpuser@127.0.0.1
Connected to sftpuser@127.0.0.1.
sftp&gt;</code></pre>



<p>（补充：这里以测试用户是 nosftpuser 为例）</p>



<h5>5.2.2 确认 SFTP 根目录</h5>



<h5>5.2.2.1 切换到 SFTP 的根目录</h5>



<pre class="wp-block-code"><code>sftp&gt; cd /</code></pre>



<h5>5.2.2.2 显示 SFTP 根目录下的文件或目录</h5>



<pre class="wp-block-code"><code>sftp&gt; ls
write  
sftp&gt;</code></pre>



<p>（补充：此时发现目前 SFTP 的根并不是 Linux 系统的根目录）</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
